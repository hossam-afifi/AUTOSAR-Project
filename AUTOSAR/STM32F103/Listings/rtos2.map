Component: ARM Compiler 6.14.1 Tool: armlink [5db06d00]

==============================================================================

Section Cross References

    main.o(.text.NVIC_Configuration) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.ARM.exidx.text.NVIC_Configuration) refers to main.o(.text.NVIC_Configuration) for [Anonymous Symbol]
    main.o(.text.CAN_Polling) refers to stm32f10x_can.o(.text.CAN_Transmit) for CAN_Transmit
    main.o(.text.CAN_Polling) refers to stm32f10x_can.o(.text.CAN_TransmitStatus) for CAN_TransmitStatus
    main.o(.text.CAN_Polling) refers to stm32f10x_can.o(.text.CAN_MessagePending) for CAN_MessagePending
    main.o(.text.CAN_Polling) refers to stm32f10x_can.o(.text.CAN_Receive) for CAN_Receive
    main.o(.ARM.exidx.text.CAN_Polling) refers to main.o(.text.CAN_Polling) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.main) refers to main.o(.bss.GPIO_InitStructure) for GPIO_InitStructure
    main.o(.text.main) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.main) refers to can_app.o(.text.main_can) for main_can
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    can_app.o(.text.rx_activate) refers to can_app.o(.bss.rxlen) for rxlen
    can_app.o(.text.rx_activate) refers to can_app.o(.data.txbuf) for txbuf
    can_app.o(.text.rx_activate) refers to can_app.o(.data.rxbuf) for rxbuf
    can_app.o(.ARM.exidx.text.rx_activate) refers to can_app.o(.text.rx_activate) for [Anonymous Symbol]
    can_app.o(.ARM.exidx.text.tx_activate) refers to can_app.o(.text.tx_activate) for [Anonymous Symbol]
    can_app.o(.text.cantp_provide_rxbuffer) refers to can_app.o(.bss.rxlen) for rxlen
    can_app.o(.text.cantp_provide_rxbuffer) refers to can_app.o(.bss.rxbufptr) for rxbufptr
    can_app.o(.text.cantp_provide_rxbuffer) refers to can_app.o(.data.rxbuf) for rxbuf
    can_app.o(.ARM.exidx.text.cantp_provide_rxbuffer) refers to can_app.o(.text.cantp_provide_rxbuffer) for [Anonymous Symbol]
    can_app.o(.text.cantp_provide_txbuffer) refers to can_app.o(.bss.txlen) for txlen
    can_app.o(.text.cantp_provide_txbuffer) refers to can_app.o(.bss.txbufptr) for txbufptr
    can_app.o(.text.cantp_provide_txbuffer) refers to can_app.o(.data.txbuf) for txbuf
    can_app.o(.ARM.exidx.text.cantp_provide_txbuffer) refers to can_app.o(.text.cantp_provide_txbuffer) for [Anonymous Symbol]
    can_app.o(.text.main_can) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    can_app.o(.text.main_can) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    can_app.o(.text.main_can) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    can_app.o(.text.main_can) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    can_app.o(.text.main_can) refers to stm32f10x_gpio.o(.text.GPIO_PinRemapConfig) for GPIO_PinRemapConfig
    can_app.o(.text.main_can) refers to helper.o(.rodata.CommConfig) for CommConfig
    can_app.o(.text.main_can) refers to can.o(.text.Can_Init) for Can_Init
    can_app.o(.text.main_can) refers to can.o(.text.Can_SetControllerMode) for Can_SetControllerMode
    can_app.o(.text.main_can) refers to canif.o(.text.CanIf_Init) for CanIf_Init
    can_app.o(.text.main_can) refers to canif.o(.text.CanIf_SetControllerMode) for CanIf_SetControllerMode
    can_app.o(.text.main_can) refers to cantp.o(.text.CanTp_Init) for CanTp_Init
    can_app.o(.text.main_can) refers to can_app.o(.bss.txbufptr) for txbufptr
    can_app.o(.text.main_can) refers to can_app.o(.data.txbuf) for txbuf
    can_app.o(.text.main_can) refers to can_app.o(.bss.rxbufptr) for rxbufptr
    can_app.o(.text.main_can) refers to can_app.o(.data.rxbuf) for rxbuf
    can_app.o(.text.main_can) refers to can_app.o(.bss.rxlen) for rxlen
    can_app.o(.text.main_can) refers to can_app.o(.bss.txlen) for txlen
    can_app.o(.text.main_can) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    can_app.o(.text.main_can) refers to can_app.o(.bss.yQueue) for yQueue
    can_app.o(.text.main_can) refers to can_app.o(.text.cantxrx) for cantxrx
    can_app.o(.text.main_can) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    can_app.o(.text.main_can) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    can_app.o(.ARM.exidx.text.main_can) refers to can_app.o(.text.main_can) for [Anonymous Symbol]
    can_app.o(.text.cantxrx) refers to can_app.o(.bss.cantxrx.txidx) for cantxrx.txidx
    can_app.o(.text.cantxrx) refers to can_app.o(.data.txbuf) for txbuf
    can_app.o(.text.cantxrx) refers to cantp.o(.text.CanTp_Transmit) for CanTp_Transmit
    can_app.o(.text.cantxrx) refers to cantp.o(.text.CanTp_MainFunction) for CanTp_MainFunction
    can_app.o(.ARM.exidx.text.cantxrx) refers to can_app.o(.text.cantxrx) for [Anonymous Symbol]
    can_app.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to can.o(.text.Can_TxIsr_wrap) for Can_TxIsr_wrap
    can_app.o(.ARM.exidx.text.USB_HP_CAN1_TX_IRQHandler) refers to can_app.o(.text.USB_HP_CAN1_TX_IRQHandler) for [Anonymous Symbol]
    can_app.o(.text.USB_LP_CAN1_RX0_IRQHandler) refers to can.o(.text.Can_RxIsr_wrap) for Can_RxIsr_wrap
    can_app.o(.ARM.exidx.text.USB_LP_CAN1_RX0_IRQHandler) refers to can_app.o(.text.USB_LP_CAN1_RX0_IRQHandler) for [Anonymous Symbol]
    can_app.o(.text.CAN1_RX1_IRQHandler) refers to can.o(.text.Can_RxIsr_wrap) for Can_RxIsr_wrap
    can_app.o(.ARM.exidx.text.CAN1_RX1_IRQHandler) refers to can_app.o(.text.CAN1_RX1_IRQHandler) for [Anonymous Symbol]
    can_app.o(.text.CAN1_SCE_IRQHandler) refers to can.o(.text.Can_ErrIsr_wrap) for Can_ErrIsr_wrap
    can_app.o(.ARM.exidx.text.CAN1_SCE_IRQHandler) refers to can_app.o(.text.CAN1_SCE_IRQHandler) for [Anonymous Symbol]
    can_app.o(.data.txbuf) refers to can_app.o(.data.txbuf1) for txbuf1
    can_app.o(.data.txbuf) refers to can_app.o(.data.txbuf2) for txbuf2
    can_app.o(.data.txbuf) refers to can_app.o(.data.txbuf3) for txbuf3
    can_app.o(.data.txbuf) refers to can_app.o(.data.txbuf4) for txbuf4
    can_app.o(.data.rxbuf) refers to can_app.o(.bss.rxbuf1) for rxbuf1
    can_app.o(.data.rxbuf) refers to can_app.o(.bss.rxbuf2) for rxbuf2
    can_app.o(.data.rxbuf) refers to can_app.o(.bss.rxbuf3) for rxbuf3
    can_app.o(.data.rxbuf) refers to can_app.o(.bss.rxbuf4) for rxbuf4
    helper.o(.text.cancel_tx_confirmation) refers to canif.o(.text.CanIf_CancelTxConfirmation) for CanIf_CancelTxConfirmation
    helper.o(.ARM.exidx.text.cancel_tx_confirmation) refers to helper.o(.text.cancel_tx_confirmation) for [Anonymous Symbol]
    helper.o(.text.rx_indication) refers to canif.o(.text.CanIf_RxIndication) for CanIf_RxIndication
    helper.o(.ARM.exidx.text.rx_indication) refers to helper.o(.text.rx_indication) for [Anonymous Symbol]
    helper.o(.text.controllerbus_off) refers to canif.o(.text.CanIf_ControllerBusOff) for CanIf_ControllerBusOff
    helper.o(.ARM.exidx.text.controllerbus_off) refers to helper.o(.text.controllerbus_off) for [Anonymous Symbol]
    helper.o(.text.tx_confirmation) refers to canif.o(.text.CanIf_TxConfirmation) for CanIf_TxConfirmation
    helper.o(.ARM.exidx.text.tx_confirmation) refers to helper.o(.text.tx_confirmation) for [Anonymous Symbol]
    helper.o(.text.controller_wakeup) refers to canif.o(.text.CanIf_SetWakeupEvent) for CanIf_SetWakeupEvent
    helper.o(.ARM.exidx.text.controller_wakeup) refers to helper.o(.text.controller_wakeup) for [Anonymous Symbol]
    helper.o(.text.arc_error) refers to canif.o(.text.CanIf_Arc_Error) for CanIf_Arc_Error
    helper.o(.ARM.exidx.text.arc_error) refers to helper.o(.text.arc_error) for [Anonymous Symbol]
    helper.o(.ARM.exidx.text.canif_busoff_notification) refers to helper.o(.text.canif_busoff_notification) for [Anonymous Symbol]
    helper.o(.ARM.exidx.text.canif_wakeup_notification) refers to helper.o(.text.canif_wakeup_notification) for [Anonymous Symbol]
    helper.o(.ARM.exidx.text.canif_wakeup_validnotification) refers to helper.o(.text.canif_wakeup_validnotification) for [Anonymous Symbol]
    helper.o(.ARM.exidx.text.canif_error_notificaton) refers to helper.o(.text.canif_error_notificaton) for [Anonymous Symbol]
    helper.o(.text.canif_user_txconfirmation) refers to cantp.o(.text.CanTp_TxConfirmation) for CanTp_TxConfirmation
    helper.o(.ARM.exidx.text.canif_user_txconfirmation) refers to helper.o(.text.canif_user_txconfirmation) for [Anonymous Symbol]
    helper.o(.text.pdur_cantp_rxindication) refers to can_app.o(.text.rx_activate) for rx_activate
    helper.o(.ARM.exidx.text.pdur_cantp_rxindication) refers to helper.o(.text.pdur_cantp_rxindication) for [Anonymous Symbol]
    helper.o(.text.pdur_cantp_provide_rxbuffer) refers to can_app.o(.text.cantp_provide_rxbuffer) for cantp_provide_rxbuffer
    helper.o(.ARM.exidx.text.pdur_cantp_provide_rxbuffer) refers to helper.o(.text.pdur_cantp_provide_rxbuffer) for [Anonymous Symbol]
    helper.o(.text.pdur_cantp_txconfirmation) refers to can_app.o(.text.tx_activate) for tx_activate
    helper.o(.ARM.exidx.text.pdur_cantp_txconfirmation) refers to helper.o(.text.pdur_cantp_txconfirmation) for [Anonymous Symbol]
    helper.o(.text.pdur_cantp_provide_txbuffer) refers to can_app.o(.text.cantp_provide_txbuffer) for cantp_provide_txbuffer
    helper.o(.ARM.exidx.text.pdur_cantp_provide_txbuffer) refers to helper.o(.text.pdur_cantp_provide_txbuffer) for [Anonymous Symbol]
    helper.o(.rodata.CanHoh) refers to helper.o(.rodata.CanFilterMaskRef) for CanFilterMaskRef
    helper.o(.rodata.CanCtrlConfig) refers to helper.o(.rodata.CanHoh) for CanHoh
    helper.o(.rodata.CanCbks) refers to helper.o(.text.cancel_tx_confirmation) for cancel_tx_confirmation
    helper.o(.rodata.CanCbks) refers to helper.o(.text.rx_indication) for rx_indication
    helper.o(.rodata.CanCbks) refers to helper.o(.text.controllerbus_off) for controllerbus_off
    helper.o(.rodata.CanCbks) refers to helper.o(.text.tx_confirmation) for tx_confirmation
    helper.o(.rodata.CanCbks) refers to helper.o(.text.controller_wakeup) for controller_wakeup
    helper.o(.rodata.CanCbks) refers to helper.o(.text.arc_error) for arc_error
    helper.o(.rodata.CanConfigSet) refers to helper.o(.rodata.CanCtrlConfig) for CanCtrlConfig
    helper.o(.rodata.CanConfigSet) refers to helper.o(.rodata.CanCbks) for CanCbks
    helper.o(.data.CanConfig) refers to helper.o(.rodata.CanConfigSet) for CanConfigSet
    helper.o(.rodata.CanIfCtlrConfig) refers to helper.o(.rodata.CanCtrlConfig) for CanCtrlConfig
    helper.o(.rodata.CanIfDispatchConfig) refers to helper.o(.text.canif_busoff_notification) for canif_busoff_notification
    helper.o(.rodata.CanIfDispatchConfig) refers to helper.o(.text.canif_wakeup_notification) for canif_wakeup_notification
    helper.o(.rodata.CanIfDispatchConfig) refers to helper.o(.text.canif_wakeup_validnotification) for canif_wakeup_validnotification
    helper.o(.rodata.CanIfDispatchConfig) refers to helper.o(.text.canif_error_notificaton) for canif_error_notificaton
    helper.o(.rodata.CanIfHohConfig) refers to helper.o(.rodata.CanIfHrhConfig1) for CanIfHrhConfig1
    helper.o(.rodata.CanIfHohConfig) refers to helper.o(.rodata.CanIfHthConfig1) for CanIfHthConfig1
    helper.o(.rodata.CanIfHohConfig) refers to helper.o(.rodata.CanIfHrhConfig2) for CanIfHrhConfig2
    helper.o(.rodata.CanIfHohConfig) refers to helper.o(.rodata.CanIfHthConfig2) for CanIfHthConfig2
    helper.o(.rodata.CanIfRxPduConfig) refers to helper.o(.rodata.CanIfCanRxPduHrhRef) for CanIfCanRxPduHrhRef
    helper.o(.rodata.CanIfTxPduConfig) refers to helper.o(.text.canif_user_txconfirmation) for canif_user_txconfirmation
    helper.o(.rodata.CanIfTxPduConfig) refers to helper.o(.rodata.CanIfCanTxPduHthRef) for CanIfCanTxPduHthRef
    helper.o(.rodata.InitConfig) refers to helper.o(.rodata.CanIfHohConfig) for CanIfHohConfig
    helper.o(.rodata.InitConfig) refers to helper.o(.rodata.CanIfRxPduConfig) for CanIfRxPduConfig
    helper.o(.rodata.InitConfig) refers to helper.o(.rodata.CanIfTxPduConfig) for CanIfTxPduConfig
    helper.o(.data.CanifConfig) refers to helper.o(.rodata.CanIfCtlrConfig) for CanIfCtlrConfig
    helper.o(.data.CanifConfig) refers to helper.o(.rodata.CanIfDispatchConfig) for CanIfDispatchConfig
    helper.o(.data.CanifConfig) refers to helper.o(.rodata.InitConfig) for InitConfig
    helper.o(.rodata.CanTpNSduConfigList) refers to helper.o(.text.pdur_cantp_rxindication) for pdur_cantp_rxindication
    helper.o(.rodata.CanTpNSduConfigList) refers to helper.o(.text.pdur_cantp_provide_rxbuffer) for pdur_cantp_provide_rxbuffer
    helper.o(.rodata.CanTpConfig) refers to helper.o(.rodata.CanTpGeneral) for CanTpGeneral
    helper.o(.rodata.CanTpConfig) refers to helper.o(.rodata.CanTpNSduConfigList) for CanTpNSduConfigList
    helper.o(.rodata.CanTpConfig) refers to helper.o(.rodata.CanTpRxIdList) for CanTpRxIdList
    helper.o(.rodata.CommConfig) refers to helper.o(.data.CanConfig) for CanConfig
    helper.o(.rodata.CommConfig) refers to helper.o(.data.CanifConfig) for CanifConfig
    helper.o(.rodata.CommConfig) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    can.o(.text.Can_RxIsr_wrap) refers to can.o(.text.Can_RxIsr) for Can_RxIsr
    can.o(.ARM.exidx.text.Can_RxIsr_wrap) refers to can.o(.text.Can_RxIsr_wrap) for [Anonymous Symbol]
    can.o(.text.Can_RxIsr) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_RxIsr) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_RxIsr) refers to stm32f10x_can.o(.text.CAN_Receive) for CAN_Receive
    can.o(.text.Can_RxIsr) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.ARM.exidx.text.Can_RxIsr) refers to can.o(.text.Can_RxIsr) for [Anonymous Symbol]
    can.o(.text.Can_TxIsr_wrap) refers to can.o(.text.Can_TxIsr) for Can_TxIsr
    can.o(.ARM.exidx.text.Can_TxIsr_wrap) refers to can.o(.text.Can_TxIsr_wrap) for [Anonymous Symbol]
    can.o(.text.Can_TxIsr) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_TxIsr) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_TxIsr) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_TxIsr) refers to stm32f10x_can.o(.text.CAN_ClearITPendingBit) for CAN_ClearITPendingBit
    can.o(.ARM.exidx.text.Can_TxIsr) refers to can.o(.text.Can_TxIsr) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.Can_ErrIsr_wrap) refers to can.o(.text.Can_ErrIsr_wrap) for [Anonymous Symbol]
    can.o(.text.Can_Init) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_Init) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_Init) refers to can.o(.text.Can_InitController) for Can_InitController
    can.o(.ARM.exidx.text.Can_Init) refers to can.o(.text.Can_Init) for [Anonymous Symbol]
    can.o(.text.Can_InitController) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_InitController) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_DeInit) for CAN_DeInit
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_FilterInit) for CAN_FilterInit
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_SlaveStartBank) for CAN_SlaveStartBank
    can.o(.text.Can_InitController) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_StructInit) for CAN_StructInit
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_Init) for CAN_Init
    can.o(.text.Can_InitController) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_InitController) refers to can.o(.text.Can_EnableControllerInterrupts) for Can_EnableControllerInterrupts
    can.o(.text.Can_InitController) refers to stm32f10x_can.o(.text.CAN_DBGFreeze) for CAN_DBGFreeze
    can.o(.ARM.exidx.text.Can_InitController) refers to can.o(.text.Can_InitController) for [Anonymous Symbol]
    can.o(.text.Can_DeInit) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_DeInit) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_DeInit) refers to can.o(.text.Can_DisableControllerInterrupts) for Can_DisableControllerInterrupts
    can.o(.ARM.exidx.text.Can_DeInit) refers to can.o(.text.Can_DeInit) for [Anonymous Symbol]
    can.o(.text.Can_DisableControllerInterrupts) refers to can.o(.text._Irq_Save) for _Irq_Save
    can.o(.text.Can_DisableControllerInterrupts) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_DisableControllerInterrupts) refers to can.o(.text._Irq_Restore) for _Irq_Restore
    can.o(.text.Can_DisableControllerInterrupts) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_DisableControllerInterrupts) refers to stm32f10x_can.o(.text.CAN_ITConfig) for CAN_ITConfig
    can.o(.ARM.exidx.text.Can_DisableControllerInterrupts) refers to can.o(.text.Can_DisableControllerInterrupts) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.GetController) refers to can.o(.text.GetController) for [Anonymous Symbol]
    can.o(.text.Can_EnableControllerInterrupts) refers to can.o(.text._Irq_Save) for _Irq_Save
    can.o(.text.Can_EnableControllerInterrupts) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_EnableControllerInterrupts) refers to can.o(.text._Irq_Restore) for _Irq_Restore
    can.o(.text.Can_EnableControllerInterrupts) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_EnableControllerInterrupts) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_EnableControllerInterrupts) refers to stm32f10x_can.o(.text.CAN_ITConfig) for CAN_ITConfig
    can.o(.ARM.exidx.text.Can_EnableControllerInterrupts) refers to can.o(.text.Can_EnableControllerInterrupts) for [Anonymous Symbol]
    can.o(.text.Can_Write) refers to can.o(.text.Can_FindHoh) for Can_FindHoh
    can.o(.text.Can_Write) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_Write) refers to can.o(.text._Irq_Save) for _Irq_Save
    can.o(.text.Can_Write) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    can.o(.text.Can_Write) refers to stm32f10x_can.o(.text.CAN_Transmit) for CAN_Transmit
    can.o(.text.Can_Write) refers to can.o(.bss.can_global) for can_global
    can.o(.text.Can_Write) refers to stm32f10x_can.o(.text.CAN_ITConfig) for CAN_ITConfig
    can.o(.text.Can_Write) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_Write) refers to can.o(.text._Irq_Restore) for _Irq_Restore
    can.o(.ARM.exidx.text.Can_Write) refers to can.o(.text.Can_Write) for [Anonymous Symbol]
    can.o(.text.Can_FindHoh) refers to can.o(.bss.can_global) for can_global
    can.o(.ARM.exidx.text.Can_FindHoh) refers to can.o(.text.Can_FindHoh) for [Anonymous Symbol]
    can.o(.text._Irq_Save) refers to can.o(.text.disable_irq) for disable_irq
    can.o(.ARM.exidx.text._Irq_Save) refers to can.o(.text._Irq_Save) for [Anonymous Symbol]
    can.o(.ARM.exidx.text._Irq_Restore) refers to can.o(.text._Irq_Restore) for [Anonymous Symbol]
    can.o(.text.Can_SetControllerMode) refers to can.o(.bss.CanUnit) for CanUnit
    can.o(.text.Can_SetControllerMode) refers to can.o(.text.GetController) for GetController
    can.o(.text.Can_SetControllerMode) refers to can.o(.text._Irq_Save) for _Irq_Save
    can.o(.text.Can_SetControllerMode) refers to can.o(.text.Can_EnableControllerInterrupts) for Can_EnableControllerInterrupts
    can.o(.text.Can_SetControllerMode) refers to can.o(.text._Irq_Restore) for _Irq_Restore
    can.o(.text.Can_SetControllerMode) refers to stm32f10x_can.o(.text.CAN_WakeUp) for CAN_WakeUp
    can.o(.text.Can_SetControllerMode) refers to stm32f10x_can.o(.text.CAN_Sleep) for CAN_Sleep
    can.o(.ARM.exidx.text.Can_SetControllerMode) refers to can.o(.text.Can_SetControllerMode) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.disable_irq) refers to can.o(.text.disable_irq) for [Anonymous Symbol]
    canif.o(.text.CanIf_Init) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.CanIf_Init) refers to canif.o(.bss.CanIf_Global) for CanIf_Global
    canif.o(.text.CanIf_Init) refers to canif.o(.text.CanIf_PreInit_InitController) for CanIf_PreInit_InitController
    canif.o(.ARM.exidx.text.CanIf_Init) refers to canif.o(.text.CanIf_Init) for [Anonymous Symbol]
    canif.o(.text.CanIf_PreInit_InitController) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.CanIf_PreInit_InitController) refers to can.o(.text.Can_InitController) for Can_InitController
    canif.o(.ARM.exidx.text.CanIf_PreInit_InitController) refers to canif.o(.text.CanIf_PreInit_InitController) for [Anonymous Symbol]
    canif.o(.text.CanIf_InitController) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.CanIf_InitController) refers to canif.o(.text.CanIf_GetControllerMode) for CanIf_GetControllerMode
    canif.o(.text.CanIf_InitController) refers to canif.o(.text.CanIf_SetControllerMode) for CanIf_SetControllerMode
    canif.o(.text.CanIf_InitController) refers to can.o(.text.Can_InitController) for Can_InitController
    canif.o(.ARM.exidx.text.CanIf_InitController) refers to canif.o(.text.CanIf_InitController) for [Anonymous Symbol]
    canif.o(.text.CanIf_GetControllerMode) refers to canif.o(.bss.CanIf_Global) for CanIf_Global
    canif.o(.ARM.exidx.text.CanIf_GetControllerMode) refers to canif.o(.text.CanIf_GetControllerMode) for [Anonymous Symbol]
    canif.o(.text.CanIf_SetControllerMode) refers to canif.o(.bss.CanIf_Global) for CanIf_Global
    canif.o(.text.CanIf_SetControllerMode) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.CanIf_SetControllerMode) refers to can.o(.text.Can_SetControllerMode) for Can_SetControllerMode
    canif.o(.text.CanIf_SetControllerMode) refers to canif.o(.text.CanIf_SetPduMode) for CanIf_SetPduMode
    canif.o(.ARM.exidx.text.CanIf_SetControllerMode) refers to canif.o(.text.CanIf_SetControllerMode) for [Anonymous Symbol]
    canif.o(.text.CanIf_SetPduMode) refers to canif.o(.bss.CanIf_Global) for CanIf_Global
    canif.o(.ARM.exidx.text.CanIf_SetPduMode) refers to canif.o(.text.CanIf_SetPduMode) for [Anonymous Symbol]
    canif.o(.text.CanIf_Transmit) refers to canif.o(.text.CanIf_FindTxPduEntry) for CanIf_FindTxPduEntry
    canif.o(.text.CanIf_Transmit) refers to canif.o(.text.CanIf_GetControllerMode) for CanIf_GetControllerMode
    canif.o(.text.CanIf_Transmit) refers to canif.o(.text.CanIf_GetPduMode) for CanIf_GetPduMode
    canif.o(.text.CanIf_Transmit) refers to can.o(.text.Can_Write) for Can_Write
    canif.o(.ARM.exidx.text.CanIf_Transmit) refers to canif.o(.text.CanIf_Transmit) for [Anonymous Symbol]
    canif.o(.text.CanIf_FindTxPduEntry) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.ARM.exidx.text.CanIf_FindTxPduEntry) refers to canif.o(.text.CanIf_FindTxPduEntry) for [Anonymous Symbol]
    canif.o(.text.CanIf_GetPduMode) refers to canif.o(.bss.CanIf_Global) for CanIf_Global
    canif.o(.ARM.exidx.text.CanIf_GetPduMode) refers to canif.o(.text.CanIf_GetPduMode) for [Anonymous Symbol]
    canif.o(.text.CanIf_TxConfirmation) refers to canif.o(.text.scheduleTxConfirmation) for scheduleTxConfirmation
    canif.o(.ARM.exidx.text.CanIf_TxConfirmation) refers to canif.o(.text.CanIf_TxConfirmation) for [Anonymous Symbol]
    canif.o(.text.scheduleTxConfirmation) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.scheduleTxConfirmation) refers to canif.o(.text.CanIf_GetPduMode) for CanIf_GetPduMode
    canif.o(.ARM.exidx.text.scheduleTxConfirmation) refers to canif.o(.text.scheduleTxConfirmation) for [Anonymous Symbol]
    canif.o(.text.CanIf_RxIndication) refers to canif.o(.text.scheduleRxIndication) for scheduleRxIndication
    canif.o(.ARM.exidx.text.CanIf_RxIndication) refers to canif.o(.text.CanIf_RxIndication) for [Anonymous Symbol]
    canif.o(.text.scheduleRxIndication) refers to canif.o(.text.CanIf_Arc_FindHrhChannel) for CanIf_Arc_FindHrhChannel
    canif.o(.text.scheduleRxIndication) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.scheduleRxIndication) refers to canif.o(.text.CanIf_GetPduMode) for CanIf_GetPduMode
    canif.o(.text.scheduleRxIndication) refers to cantp.o(.text.CanTp_RxIndication) for CanTp_RxIndication
    canif.o(.ARM.exidx.text.scheduleRxIndication) refers to canif.o(.text.scheduleRxIndication) for [Anonymous Symbol]
    canif.o(.ARM.exidx.text.CanIf_CancelTxConfirmation) refers to canif.o(.text.CanIf_CancelTxConfirmation) for [Anonymous Symbol]
    canif.o(.text.CanIf_ControllerBusOff) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.text.CanIf_ControllerBusOff) refers to canif.o(.text.CanIf_SetControllerMode) for CanIf_SetControllerMode
    canif.o(.ARM.exidx.text.CanIf_ControllerBusOff) refers to canif.o(.text.CanIf_ControllerBusOff) for [Anonymous Symbol]
    canif.o(.ARM.exidx.text.CanIf_SetWakeupEvent) refers to canif.o(.text.CanIf_SetWakeupEvent) for [Anonymous Symbol]
    canif.o(.text.CanIf_Arc_Error) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.ARM.exidx.text.CanIf_Arc_Error) refers to canif.o(.text.CanIf_Arc_Error) for [Anonymous Symbol]
    canif.o(.text.CanIf_Arc_FindHrhChannel) refers to canif.o(.bss.CanIf_ConfigPtr) for CanIf_ConfigPtr
    canif.o(.ARM.exidx.text.CanIf_Arc_FindHrhChannel) refers to canif.o(.text.CanIf_Arc_FindHrhChannel) for [Anonymous Symbol]
    cantp.o(.text.CanTp_Transmit) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.text.CanTp_Transmit) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.text.CanTp_Transmit) refers to cantp.o(.text.calcRequiredProtocolFrameType) for calcRequiredProtocolFrameType
    cantp.o(.ARM.exidx.text.CanTp_Transmit) refers to cantp.o(.text.CanTp_Transmit) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.calcRequiredProtocolFrameType) refers to cantp.o(.text.calcRequiredProtocolFrameType) for [Anonymous Symbol]
    cantp.o(.text.CanTp_Init) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.text.CanTp_Init) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.text.CanTp_Init) refers to cantp.o(.text.initRx15765RuntimeData) for initRx15765RuntimeData
    cantp.o(.text.CanTp_Init) refers to cantp.o(.text.initTx15765RuntimeData) for initTx15765RuntimeData
    cantp.o(.ARM.exidx.text.CanTp_Init) refers to cantp.o(.text.CanTp_Init) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.initTx15765RuntimeData) refers to cantp.o(.text.initTx15765RuntimeData) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.initRx15765RuntimeData) refers to cantp.o(.text.initRx15765RuntimeData) for [Anonymous Symbol]
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.text.CanTp_RxIndication) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.text.getFrameType) for getFrameType
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.text.handleSingleFrame) for handleSingleFrame
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.text.handleFirstFrame) for handleFirstFrame
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.text.handleConsecutiveFrame) for handleConsecutiveFrame
    cantp.o(.text.CanTp_RxIndication) refers to cantp.o(.text.handleFlowControlFrame) for handleFlowControlFrame
    cantp.o(.ARM.exidx.text.CanTp_RxIndication) refers to cantp.o(.text.CanTp_RxIndication) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.getFrameType) refers to cantp.o(.text.getFrameType) for [Anonymous Symbol]
    cantp.o(.text.handleSingleFrame) refers to cantp.o(.text.initRx15765RuntimeData) for initRx15765RuntimeData
    cantp.o(.text.handleSingleFrame) refers to cantp.o(.text.getPduLength) for getPduLength
    cantp.o(.text.handleSingleFrame) refers to cantp.o(.text.copySegmentToPduRRxBuffer) for copySegmentToPduRRxBuffer
    cantp.o(.text.handleSingleFrame) refers to cantp.o(.text.copySegmentToLocalRxBuffer) for copySegmentToLocalRxBuffer
    cantp.o(.ARM.exidx.text.handleSingleFrame) refers to cantp.o(.text.handleSingleFrame) for [Anonymous Symbol]
    cantp.o(.text.handleFirstFrame) refers to cantp.o(.text.initRx15765RuntimeData) for initRx15765RuntimeData
    cantp.o(.text.handleFirstFrame) refers to cantp.o(.text.getPduLength) for getPduLength
    cantp.o(.text.handleFirstFrame) refers to cantp.o(.text.copySegmentToPduRRxBuffer) for copySegmentToPduRRxBuffer
    cantp.o(.text.handleFirstFrame) refers to cantp.o(.text.sendFlowControlFrame) for sendFlowControlFrame
    cantp.o(.text.handleFirstFrame) refers to cantp.o(.text.copySegmentToLocalRxBuffer) for copySegmentToLocalRxBuffer
    cantp.o(.ARM.exidx.text.handleFirstFrame) refers to cantp.o(.text.handleFirstFrame) for [Anonymous Symbol]
    cantp.o(.text.handleConsecutiveFrame) refers to cantp.o(.text.copySegmentToPduRRxBuffer) for copySegmentToPduRRxBuffer
    cantp.o(.text.handleConsecutiveFrame) refers to cantp.o(.text.copySegmentToLocalRxBuffer) for copySegmentToLocalRxBuffer
    cantp.o(.text.handleConsecutiveFrame) refers to cantp.o(.text.sendFlowControlFrame) for sendFlowControlFrame
    cantp.o(.ARM.exidx.text.handleConsecutiveFrame) refers to cantp.o(.text.handleConsecutiveFrame) for [Anonymous Symbol]
    cantp.o(.text.handleFlowControlFrame) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.ARM.exidx.text.handleFlowControlFrame) refers to cantp.o(.text.handleFlowControlFrame) for [Anonymous Symbol]
    cantp.o(.text.CanTp_TxConfirmation) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.text.CanTp_TxConfirmation) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.text.CanTp_TxConfirmation) refers to cantp.o(.text.handleNextTxFrameSent) for handleNextTxFrameSent
    cantp.o(.ARM.exidx.text.CanTp_TxConfirmation) refers to cantp.o(.text.CanTp_TxConfirmation) for [Anonymous Symbol]
    cantp.o(.text.handleNextTxFrameSent) refers to cantp.o(.text.sendNextTxFrame) for sendNextTxFrame
    cantp.o(.ARM.exidx.text.handleNextTxFrameSent) refers to cantp.o(.text.handleNextTxFrameSent) for [Anonymous Symbol]
    cantp.o(.text.CanTp_Shutdown) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.ARM.exidx.text.CanTp_Shutdown) refers to cantp.o(.text.CanTp_Shutdown) for [Anonymous Symbol]
    cantp.o(.text.CanTp_MainFunction) refers to cantp.o(.bss.CanTpRunTimeData) for CanTpRunTimeData
    cantp.o(.text.CanTp_MainFunction) refers to helper.o(.rodata.CanTpConfig) for CanTpConfig
    cantp.o(.text.CanTp_MainFunction) refers to cantp.o(.text.copySegmentToPduRRxBuffer) for copySegmentToPduRRxBuffer
    cantp.o(.text.CanTp_MainFunction) refers to cantp.o(.text.sendFlowControlFrame) for sendFlowControlFrame
    cantp.o(.text.CanTp_MainFunction) refers to cantp.o(.text.sendNextTxFrame) for sendNextTxFrame
    cantp.o(.ARM.exidx.text.CanTp_MainFunction) refers to cantp.o(.text.CanTp_MainFunction) for [Anonymous Symbol]
    cantp.o(.text.sendNextTxFrame) refers to cantp.o(.text.canTansmitPaddingHelper) for canTansmitPaddingHelper
    cantp.o(.ARM.exidx.text.sendNextTxFrame) refers to cantp.o(.text.sendNextTxFrame) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.copySegmentToPduRRxBuffer) refers to cantp.o(.text.copySegmentToPduRRxBuffer) for [Anonymous Symbol]
    cantp.o(.text.sendFlowControlFrame) refers to cantp.o(.text.canReceivePaddingHelper) for canReceivePaddingHelper
    cantp.o(.ARM.exidx.text.sendFlowControlFrame) refers to cantp.o(.text.sendFlowControlFrame) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.getPduLength) refers to cantp.o(.text.getPduLength) for [Anonymous Symbol]
    cantp.o(.ARM.exidx.text.copySegmentToLocalRxBuffer) refers to cantp.o(.text.copySegmentToLocalRxBuffer) for [Anonymous Symbol]
    cantp.o(.text.canTansmitPaddingHelper) refers to canif.o(.text.CanIf_Transmit) for CanIf_Transmit
    cantp.o(.ARM.exidx.text.canTansmitPaddingHelper) refers to cantp.o(.text.canTansmitPaddingHelper) for [Anonymous Symbol]
    cantp.o(.text.canReceivePaddingHelper) refers to canif.o(.text.CanIf_Transmit) for CanIf_Transmit
    cantp.o(.ARM.exidx.text.canReceivePaddingHelper) refers to cantp.o(.text.canReceivePaddingHelper) for [Anonymous Symbol]
    pdur.o(.text.PduR_Init) refers to pdur.o(.bss.PduRState) for PduRState
    pdur.o(.text.PduR_Init) refers to pdur.o(.bss.PduRConfig) for PduRConfig
    pdur.o(.ARM.exidx.text.PduR_Init) refers to pdur.o(.text.PduR_Init) for [Anonymous Symbol]
    pdur.o(.text.PduR_GetConfigurationId) refers to pdur.o(.bss.PduRConfig) for PduRConfig
    pdur.o(.ARM.exidx.text.PduR_GetConfigurationId) refers to pdur.o(.text.PduR_GetConfigurationId) for [Anonymous Symbol]
    pdur.o(.ARM.exidx.text.PduR_ChangeParameterRequest) refers to pdur.o(.text.PduR_ChangeParameterRequest) for [Anonymous Symbol]
    pdur.o(.ARM.exidx.text.PduR_CancelTransmitRequest) refers to pdur.o(.text.PduR_CancelTransmitRequest) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to clib_arm.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.4) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for vTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig) refers to misc.o(.text.NVIC_PriorityGroupConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_Init) refers to misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    stm32f10x_can.o(.text.CAN_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit) refers to stm32f10x_can.o(.text.CAN_DeInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Init) refers to stm32f10x_can.o(.text.CAN_Init) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit) refers to stm32f10x_can.o(.text.CAN_FilterInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit) refers to stm32f10x_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank) refers to stm32f10x_can.o(.text.CAN_SlaveStartBank) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze) refers to stm32f10x_can.o(.text.CAN_DBGFreeze) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd) refers to stm32f10x_can.o(.text.CAN_TTComModeCmd) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit) refers to stm32f10x_can.o(.text.CAN_Transmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus) refers to stm32f10x_can.o(.text.CAN_TransmitStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit) refers to stm32f10x_can.o(.text.CAN_CancelTransmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Receive) refers to stm32f10x_can.o(.text.CAN_Receive) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease) refers to stm32f10x_can.o(.text.CAN_FIFORelease) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending) refers to stm32f10x_can.o(.text.CAN_MessagePending) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest) refers to stm32f10x_can.o(.text.CAN_OperatingModeRequest) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep) refers to stm32f10x_can.o(.text.CAN_Sleep) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp) refers to stm32f10x_can.o(.text.CAN_WakeUp) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode) refers to stm32f10x_can.o(.text.CAN_GetLastErrorCode) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig) refers to stm32f10x_can.o(.text.CAN_ITConfig) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus) refers to stm32f10x_can.o(.text.CAN_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag) refers to stm32f10x_can.o(.text.CAN_ClearFlag) for [Anonymous Symbol]
    stm32f10x_can.o(.text.CAN_GetITStatus) refers to stm32f10x_can.o(.text.CheckITStatus) for CheckITStatus
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus) refers to stm32f10x_can.o(.text.CAN_GetITStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CheckITStatus) refers to stm32f10x_can.o(.text.CheckITStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit) refers to stm32f10x_can.o(.text.CAN_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to stm32f10x_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit) refers to stm32f10x_gpio.o(.text.GPIO_AFIODeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to stm32f10x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to stm32f10x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to stm32f10x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputCmd) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinRemapConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig) refers to stm32f10x_gpio.o(.text.GPIO_EXTILineConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig) refers to stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to stm32f10x_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to stm32f10x_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to stm32f10x_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to stm32f10x_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to stm32f10x_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.APBAHBPrescTable) for APBAHBPrescTable
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.ADCPrescTable) for ADCPrescTable
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to stm32f10x_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to stm32f10x_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to stm32f10x_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to stm32f10x_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to stm32f10x_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to stm32f10x_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_SetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider) refers to stm32f10x_rtc.o(.text.RTC_GetDivider) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask) refers to stm32f10x_rtc.o(.text.RTC_WaitForLastTask) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to stm32f10x_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to stm32f10x_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to stm32f10x_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to stm32f10x_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to stm32f10x_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit) refers to stm32f10x_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to stm32f10x_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to stm32f10x_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to stm32f10x_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to stm32f10x_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI3_Config) for TI3_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI4_Config) for TI4_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI1_Config) refers to stm32f10x_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI2_Config) refers to stm32f10x_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI3_Config) refers to stm32f10x_tim.o(.text.TI3_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI4_Config) refers to stm32f10x_tim.o(.text.TI4_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to stm32f10x_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to stm32f10x_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to stm32f10x_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to stm32f10x_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd) refers to stm32f10x_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to stm32f10x_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to stm32f10x_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to stm32f10x_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to stm32f10x_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to stm32f10x_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to stm32f10x_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to stm32f10x_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to stm32f10x_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to stm32f10x_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to stm32f10x_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to stm32f10x_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to stm32f10x_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to stm32f10x_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to stm32f10x_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to stm32f10x_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to stm32f10x_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to stm32f10x_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to stm32f10x_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to stm32f10x_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to stm32f10x_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to stm32f10x_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to stm32f10x_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to stm32f10x_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to stm32f10x_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to stm32f10x_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to stm32f10x_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to stm32f10x_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to stm32f10x_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to stm32f10x_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to stm32f10x_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to stm32f10x_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to stm32f10x_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to can_app.o(.text.USB_HP_CAN1_TX_IRQHandler) for USB_HP_CAN1_TX_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to can_app.o(.text.USB_LP_CAN1_RX0_IRQHandler) for USB_LP_CAN1_RX0_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to can_app.o(.text.CAN1_RX1_IRQHandler) for CAN1_RX1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to can_app.o(.text.CAN1_SCE_IRQHandler) for CAN1_SCE_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.NVIC_Configuration), (22 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_Configuration), (8 bytes).
    Removing main.o(.text.CAN_Polling), (160 bytes).
    Removing main.o(.ARM.exidx.text.CAN_Polling), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (18 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.bss.ulRxEvents), (4 bytes).
    Removing main.o(.bss.TestRx), (1 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing can_app.o(.text), (0 bytes).
    Removing can_app.o(.ARM.exidx.text.rx_activate), (8 bytes).
    Removing can_app.o(.text.tx_activate), (32 bytes).
    Removing can_app.o(.ARM.exidx.text.tx_activate), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.cantp_provide_rxbuffer), (8 bytes).
    Removing can_app.o(.text.cantp_provide_txbuffer), (56 bytes).
    Removing can_app.o(.ARM.exidx.text.cantp_provide_txbuffer), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.main_can), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.cantxrx), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.USB_HP_CAN1_TX_IRQHandler), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.USB_LP_CAN1_RX0_IRQHandler), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.CAN1_RX1_IRQHandler), (8 bytes).
    Removing can_app.o(.ARM.exidx.text.CAN1_SCE_IRQHandler), (8 bytes).
    Removing helper.o(.text), (0 bytes).
    Removing helper.o(.ARM.exidx.text.cancel_tx_confirmation), (8 bytes).
    Removing helper.o(.ARM.exidx.text.rx_indication), (8 bytes).
    Removing helper.o(.ARM.exidx.text.controllerbus_off), (8 bytes).
    Removing helper.o(.ARM.exidx.text.tx_confirmation), (8 bytes).
    Removing helper.o(.ARM.exidx.text.controller_wakeup), (8 bytes).
    Removing helper.o(.ARM.exidx.text.arc_error), (8 bytes).
    Removing helper.o(.ARM.exidx.text.canif_busoff_notification), (8 bytes).
    Removing helper.o(.ARM.exidx.text.canif_wakeup_notification), (8 bytes).
    Removing helper.o(.ARM.exidx.text.canif_wakeup_validnotification), (8 bytes).
    Removing helper.o(.ARM.exidx.text.canif_error_notificaton), (8 bytes).
    Removing helper.o(.ARM.exidx.text.canif_user_txconfirmation), (8 bytes).
    Removing helper.o(.ARM.exidx.text.pdur_cantp_rxindication), (8 bytes).
    Removing helper.o(.ARM.exidx.text.pdur_cantp_provide_rxbuffer), (8 bytes).
    Removing helper.o(.text.pdur_cantp_txconfirmation), (8 bytes).
    Removing helper.o(.ARM.exidx.text.pdur_cantp_txconfirmation), (8 bytes).
    Removing helper.o(.text.pdur_cantp_provide_txbuffer), (8 bytes).
    Removing helper.o(.ARM.exidx.text.pdur_cantp_provide_txbuffer), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.Can_RxIsr_wrap), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_RxIsr), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_TxIsr_wrap), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_TxIsr), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_ErrIsr_wrap), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_Init), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_InitController), (8 bytes).
    Removing can.o(.text.Can_DeInit), (66 bytes).
    Removing can.o(.ARM.exidx.text.Can_DeInit), (8 bytes).
    Removing can.o(.text.Can_DisableControllerInterrupts), (74 bytes).
    Removing can.o(.ARM.exidx.text.Can_DisableControllerInterrupts), (8 bytes).
    Removing can.o(.ARM.exidx.text.GetController), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_EnableControllerInterrupts), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_Write), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_FindHoh), (8 bytes).
    Removing can.o(.ARM.exidx.text._Irq_Save), (8 bytes).
    Removing can.o(.ARM.exidx.text._Irq_Restore), (8 bytes).
    Removing can.o(.ARM.exidx.text.Can_SetControllerMode), (8 bytes).
    Removing can.o(.ARM.exidx.text.disable_irq), (8 bytes).
    Removing can.o(.bss.S_HIGH), (1 bytes).
    Removing can.o(.bss.S_LOW), (1 bytes).
    Removing can.o(.bss.S_ACTIVE), (1 bytes).
    Removing can.o(.bss.S_IDLE), (1 bytes).
    Removing canif.o(.text), (0 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_Init), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_PreInit_InitController), (8 bytes).
    Removing canif.o(.text.CanIf_InitController), (74 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_InitController), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_GetControllerMode), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_SetControllerMode), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_SetPduMode), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_Transmit), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_FindTxPduEntry), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_GetPduMode), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_TxConfirmation), (8 bytes).
    Removing canif.o(.ARM.exidx.text.scheduleTxConfirmation), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_RxIndication), (8 bytes).
    Removing canif.o(.ARM.exidx.text.scheduleRxIndication), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_CancelTxConfirmation), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_ControllerBusOff), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_SetWakeupEvent), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_Arc_Error), (8 bytes).
    Removing canif.o(.ARM.exidx.text.CanIf_Arc_FindHrhChannel), (8 bytes).
    Removing cantp.o(.text), (0 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_Transmit), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.calcRequiredProtocolFrameType), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_Init), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.initTx15765RuntimeData), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.initRx15765RuntimeData), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_RxIndication), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.getFrameType), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.handleSingleFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.handleFirstFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.handleConsecutiveFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.handleFlowControlFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_TxConfirmation), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.handleNextTxFrameSent), (8 bytes).
    Removing cantp.o(.text.CanTp_Shutdown), (14 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_Shutdown), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.CanTp_MainFunction), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.sendNextTxFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.copySegmentToPduRRxBuffer), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.sendFlowControlFrame), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.getPduLength), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.copySegmentToLocalRxBuffer), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.canTansmitPaddingHelper), (8 bytes).
    Removing cantp.o(.ARM.exidx.text.canReceivePaddingHelper), (8 bytes).
    Removing pdur.o(.text), (0 bytes).
    Removing pdur.o(.text.PduR_Init), (34 bytes).
    Removing pdur.o(.ARM.exidx.text.PduR_Init), (8 bytes).
    Removing pdur.o(.text.PduR_GetConfigurationId), (14 bytes).
    Removing pdur.o(.ARM.exidx.text.PduR_GetConfigurationId), (8 bytes).
    Removing pdur.o(.text.PduR_ChangeParameterRequest), (2 bytes).
    Removing pdur.o(.ARM.exidx.text.PduR_ChangeParameterRequest), (8 bytes).
    Removing pdur.o(.text.PduR_CancelTransmitRequest), (4 bytes).
    Removing pdur.o(.ARM.exidx.text.PduR_CancelTransmitRequest), (8 bytes).
    Removing pdur.o(.bss.PduRState), (1 bytes).
    Removing pdur.o(.bss.PduRConfig), (4 bytes).
    Removing pdur_canif.o(.text), (0 bytes).
    Removing pdur_cantp.o(.text), (0 bytes).
    Removing pdur_com.o(.text), (0 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (68 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (216 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (44 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (146 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (74 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (216 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (208 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (20 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (148 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (216 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (186 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (150 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (338 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (178 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (246 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.text.vApplicationStackOverflowHook), (2 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.4), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (68 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing misc.o(.text), (0 bytes).
    Removing misc.o(.text.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig), (8 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing misc.o(.text.NVIC_SetVectorTable), (24 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing misc.o(.text.NVIC_SystemLPConfig), (24 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing misc.o(.text.SysTick_CLKSourceConfig), (26 bytes).
    Removing misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing stm32f10x_can.o(.text), (0 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TTComModeCmd), (92 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TransmitStatus), (144 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_CancelTransmit), (36 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Receive), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_FIFORelease), (18 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_MessagePending), (26 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_OperatingModeRequest), (138 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLastErrorCode), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter), (6 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetFlagStatus), (50 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ClearFlag), (48 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetITStatus), (264 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CheckITStatus), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CheckITStatus), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text), (0 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_DeInit), (76 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_AFIODeInit), (20 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_StructInit), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_SetBits), (4 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ResetBits), (4 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_WriteBit), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinLockConfig), (16 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputConfig), (30 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputCmd), (10 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EXTILineConfig), (46 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig), (10 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text), (0 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_DeInit), (66 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSEConfig), (50 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp), (48 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetFlagStatus), (42 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSICmd), (10 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLConfig), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLCmd), (10 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK1Config), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK2Config), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ITConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_USBCLKConfig), (10 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ADCCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSEConfig), (30 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetClocksFreq), (160 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd), (10 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearFlag), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetITStatus), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_rcc.o(.rodata.APBAHBPrescTable), (16 bytes).
    Removing stm32f10x_rcc.o(.rodata.ADCPrescTable), (4 bytes).
    Removing stm32f10x_rtc.o(.text), (0 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ITConfig), (24 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_EnterConfigMode), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ExitConfigMode), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetCounter), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetCounter), (28 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetPrescaler), (30 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetAlarm), (28 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetDivider), (22 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForLastTask), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForSynchro), (24 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetFlagStatus), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearFlag), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetITStatus), (32 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearITPendingBit), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_tim.o(.text), (0 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DeInit), (558 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TimeBaseInit), (170 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1Init), (118 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2Init), (122 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3Init), (122 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4Init), (94 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICInit), (98 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI1_Config), (132 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC1Prescaler), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI2_Config), (144 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC2Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI3_Config), (138 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI3_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC3Prescaler), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI4_Config), (148 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI4_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC4Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PWMIConfig), (112 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRConfig), (40 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TimeBaseStructInit), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OCStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_Cmd), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs), (24 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ITConfig), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DMACmd), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_InternalClockConfig), (10 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectInputTrigger), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode1Config), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRConfig), (22 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode2Config), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CounterModeConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig), (48 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC1Config), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC2Config), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC3Config), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC4Config), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ARRPreloadConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCOM), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCCDMA), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCPreloadControl), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1PreloadConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2PreloadConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3PreloadConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4PreloadConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1FastConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2FastConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3FastConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4FastConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC1Ref), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC2Ref), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC3Ref), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC4Ref), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1PolarityConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxCmd), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxNCmd), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOCxM), (82 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateDisableConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateRequestConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectHallSensor), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOnePulseMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOutputTrigger), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectSlaveMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare4), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetClockDivision), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture4), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetPrescaler), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearFlag), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetITStatus), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearITPendingBit), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (110 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (146 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (126 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (176 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (142 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (288 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (130 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.vTaskDelayUntil), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (174 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (122 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (214 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (66 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (36 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

949 unused section(s) (total 22980 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    Can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    CanIf.c                                  0x00000000   Number         0  canif.o ABSOLUTE
    CanTp.c                                  0x00000000   Number         0  cantp.o ABSOLUTE
    PduR.c                                   0x00000000   Number         0  pdur.o ABSOLUTE
    PduR_CanIf.c                             0x00000000   Number         0  pdur_canif.o ABSOLUTE
    PduR_CanTp.c                             0x00000000   Number         0  pdur_cantp.o ABSOLUTE
    PduR_Com.c                               0x00000000   Number         0  pdur_com.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    can_app.c                                0x00000000   Number         0  can_app.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    helper.c                                 0x00000000   Number         0  helper.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    misc.c                                   0x00000000   Number         0  misc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stm32f10x_can.c                          0x00000000   Number         0  stm32f10x_can.o ABSOLUTE
    stm32f10x_gpio.c                         0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    stm32f10x_rcc.c                          0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    stm32f10x_rtc.c                          0x00000000   Number         0  stm32f10x_rtc.o ABSOLUTE
    stm32f10x_tim.c                          0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000162   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000164   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000166   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000168   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000168   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000168   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800016e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000176   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800017a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800017a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000182   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000184   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000184   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000188   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000190   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001d0   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800025a   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800026a   Section        0  heapauxi.o(.text)
    .text                                    0x08000270   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080002d4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000322   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800036c   Section        0  exit.o(.text)
    .text                                    0x08000380   Section        8  libspace.o(.text)
    .text                                    0x08000388   Section        0  sys_exit.o(.text)
    .text                                    0x08000394   Section        2  use_no_semi.o(.text)
    .text                                    0x08000396   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000398   Section        0  can_app.o(.text.CAN1_RX1_IRQHandler)
    [Anonymous Symbol]                       0x080003d8   Section        0  can_app.o(.text.CAN1_SCE_IRQHandler)
    [Anonymous Symbol]                       0x08000414   Section        0  stm32f10x_can.o(.text.CAN_ClearITPendingBit)
    [Anonymous Symbol]                       0x080004c0   Section        0  stm32f10x_can.o(.text.CAN_DBGFreeze)
    [Anonymous Symbol]                       0x080004d4   Section        0  stm32f10x_can.o(.text.CAN_DeInit)
    [Anonymous Symbol]                       0x080004fc   Section        0  stm32f10x_can.o(.text.CAN_FilterInit)
    [Anonymous Symbol]                       0x080005a8   Section        0  stm32f10x_can.o(.text.CAN_ITConfig)
    [Anonymous Symbol]                       0x080005b8   Section        0  stm32f10x_can.o(.text.CAN_Init)
    [Anonymous Symbol]                       0x080006bc   Section        0  stm32f10x_can.o(.text.CAN_Receive)
    [Anonymous Symbol]                       0x0800075c   Section        0  stm32f10x_can.o(.text.CAN_SlaveStartBank)
    [Anonymous Symbol]                       0x08000788   Section        0  stm32f10x_can.o(.text.CAN_Sleep)
    [Anonymous Symbol]                       0x080007a4   Section        0  stm32f10x_can.o(.text.CAN_StructInit)
    [Anonymous Symbol]                       0x080007b8   Section        0  stm32f10x_can.o(.text.CAN_Transmit)
    [Anonymous Symbol]                       0x0800085c   Section        0  stm32f10x_can.o(.text.CAN_WakeUp)
    [Anonymous Symbol]                       0x08000884   Section        0  canif.o(.text.CanIf_Arc_Error)
    CanIf_Arc_FindHrhChannel                 0x080008b9   Thumb Code    66  canif.o(.text.CanIf_Arc_FindHrhChannel)
    [Anonymous Symbol]                       0x080008b8   Section        0  canif.o(.text.CanIf_Arc_FindHrhChannel)
    [Anonymous Symbol]                       0x080008fc   Section        0  canif.o(.text.CanIf_CancelTxConfirmation)
    [Anonymous Symbol]                       0x08000900   Section        0  canif.o(.text.CanIf_ControllerBusOff)
    CanIf_FindTxPduEntry                     0x08000939   Thumb Code    32  canif.o(.text.CanIf_FindTxPduEntry)
    [Anonymous Symbol]                       0x08000938   Section        0  canif.o(.text.CanIf_FindTxPduEntry)
    [Anonymous Symbol]                       0x08000958   Section        0  canif.o(.text.CanIf_GetControllerMode)
    [Anonymous Symbol]                       0x0800096c   Section        0  canif.o(.text.CanIf_GetPduMode)
    [Anonymous Symbol]                       0x08000980   Section        0  canif.o(.text.CanIf_Init)
    [Anonymous Symbol]                       0x080009a8   Section        0  canif.o(.text.CanIf_PreInit_InitController)
    [Anonymous Symbol]                       0x080009c8   Section        0  canif.o(.text.CanIf_RxIndication)
    [Anonymous Symbol]                       0x080009d0   Section        0  canif.o(.text.CanIf_SetControllerMode)
    [Anonymous Symbol]                       0x08000aa0   Section        0  canif.o(.text.CanIf_SetPduMode)
    [Anonymous Symbol]                       0x08000b28   Section        0  canif.o(.text.CanIf_SetWakeupEvent)
    [Anonymous Symbol]                       0x08000b2c   Section        0  canif.o(.text.CanIf_Transmit)
    [Anonymous Symbol]                       0x08000b94   Section        0  canif.o(.text.CanIf_TxConfirmation)
    [Anonymous Symbol]                       0x08000b9c   Section        0  cantp.o(.text.CanTp_Init)
    [Anonymous Symbol]                       0x08000bf0   Section        0  cantp.o(.text.CanTp_MainFunction)
    [Anonymous Symbol]                       0x08000dfc   Section        0  cantp.o(.text.CanTp_RxIndication)
    [Anonymous Symbol]                       0x08000eb8   Section        0  cantp.o(.text.CanTp_Transmit)
    [Anonymous Symbol]                       0x0800101c   Section        0  cantp.o(.text.CanTp_TxConfirmation)
    [Anonymous Symbol]                       0x08001080   Section        0  can.o(.text.Can_EnableControllerInterrupts)
    [Anonymous Symbol]                       0x0800110c   Section        0  can.o(.text.Can_ErrIsr_wrap)
    Can_FindHoh                              0x08001111   Thumb Code    28  can.o(.text.Can_FindHoh)
    [Anonymous Symbol]                       0x08001110   Section        0  can.o(.text.Can_FindHoh)
    [Anonymous Symbol]                       0x0800112c   Section        0  can.o(.text.Can_Init)
    [Anonymous Symbol]                       0x0800119c   Section        0  can.o(.text.Can_InitController)
    Can_RxIsr                                0x08001299   Thumb Code   172  can.o(.text.Can_RxIsr)
    [Anonymous Symbol]                       0x08001298   Section        0  can.o(.text.Can_RxIsr)
    [Anonymous Symbol]                       0x08001344   Section        0  can.o(.text.Can_RxIsr_wrap)
    [Anonymous Symbol]                       0x0800134c   Section        0  can.o(.text.Can_SetControllerMode)
    Can_TxIsr                                0x080013a9   Thumb Code   136  can.o(.text.Can_TxIsr)
    [Anonymous Symbol]                       0x080013a8   Section        0  can.o(.text.Can_TxIsr)
    [Anonymous Symbol]                       0x08001430   Section        0  can.o(.text.Can_TxIsr_wrap)
    [Anonymous Symbol]                       0x08001438   Section        0  can.o(.text.Can_Write)
    [Anonymous Symbol]                       0x080014f0   Section        0  stm32f10x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x080015a0   Section        0  stm32f10x_gpio.o(.text.GPIO_PinRemapConfig)
    GetController                            0x08001615   Thumb Code    14  can.o(.text.GetController)
    [Anonymous Symbol]                       0x08001614   Section        0  can.o(.text.GetController)
    [Anonymous Symbol]                       0x08001624   Section        0  misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08001690   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080016d0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080016d4   Section        0  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x080016ec   Section        0  stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd)
    [Anonymous Symbol]                       0x08001704   Section        0  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x08001720   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08001740   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08001745   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08001744   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800174d   Thumb Code   190  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800174c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800180c   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08001828   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08001880   Section        0  can_app.o(.text.USB_HP_CAN1_TX_IRQHandler)
    [Anonymous Symbol]                       0x080018bc   Section        0  can_app.o(.text.USB_LP_CAN1_RX0_IRQHandler)
    _Irq_Restore                             0x080018fd   Thumb Code    12  can.o(.text._Irq_Restore)
    [Anonymous Symbol]                       0x080018fc   Section        0  can.o(.text._Irq_Restore)
    _Irq_Save                                0x08001909   Thumb Code    22  can.o(.text._Irq_Save)
    [Anonymous Symbol]                       0x08001908   Section        0  can.o(.text._Irq_Save)
    __tagsym$$used.1                         0x08001920   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08001920   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x0800193c   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x0800193c   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08001970   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08001970   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080019c8   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080019c8   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080019e4   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x080019e8   Section        0  helper.o(.text.arc_error)
    calcRequiredProtocolFrameType            0x080019f1   Thumb Code   132  cantp.o(.text.calcRequiredProtocolFrameType)
    [Anonymous Symbol]                       0x080019f0   Section        0  cantp.o(.text.calcRequiredProtocolFrameType)
    canReceivePaddingHelper                  0x08001a75   Thumb Code    78  cantp.o(.text.canReceivePaddingHelper)
    [Anonymous Symbol]                       0x08001a74   Section        0  cantp.o(.text.canReceivePaddingHelper)
    canTansmitPaddingHelper                  0x08001ac5   Thumb Code    78  cantp.o(.text.canTansmitPaddingHelper)
    [Anonymous Symbol]                       0x08001ac4   Section        0  cantp.o(.text.canTansmitPaddingHelper)
    [Anonymous Symbol]                       0x08001b14   Section        0  helper.o(.text.cancel_tx_confirmation)
    [Anonymous Symbol]                       0x08001b1c   Section        0  helper.o(.text.canif_busoff_notification)
    [Anonymous Symbol]                       0x08001b20   Section        0  helper.o(.text.canif_error_notificaton)
    [Anonymous Symbol]                       0x08001b24   Section        0  helper.o(.text.canif_user_txconfirmation)
    [Anonymous Symbol]                       0x08001b2c   Section        0  helper.o(.text.canif_wakeup_notification)
    [Anonymous Symbol]                       0x08001b30   Section        0  helper.o(.text.canif_wakeup_validnotification)
    [Anonymous Symbol]                       0x08001b34   Section        0  can_app.o(.text.cantp_provide_rxbuffer)
    cantxrx                                  0x08001b6d   Thumb Code    50  can_app.o(.text.cantxrx)
    [Anonymous Symbol]                       0x08001b6c   Section        0  can_app.o(.text.cantxrx)
    [Anonymous Symbol]                       0x08001ba0   Section        0  helper.o(.text.controller_wakeup)
    [Anonymous Symbol]                       0x08001ba8   Section        0  helper.o(.text.controllerbus_off)
    copySegmentToLocalRxBuffer               0x08001bb1   Thumb Code    42  cantp.o(.text.copySegmentToLocalRxBuffer)
    [Anonymous Symbol]                       0x08001bb0   Section        0  cantp.o(.text.copySegmentToLocalRxBuffer)
    copySegmentToPduRRxBuffer                0x08001bdd   Thumb Code   184  cantp.o(.text.copySegmentToPduRRxBuffer)
    [Anonymous Symbol]                       0x08001bdc   Section        0  cantp.o(.text.copySegmentToPduRRxBuffer)
    disable_irq                              0x08001c95   Thumb Code    14  can.o(.text.disable_irq)
    [Anonymous Symbol]                       0x08001c94   Section        0  can.o(.text.disable_irq)
    getFrameType                             0x08001ca5   Thumb Code    60  cantp.o(.text.getFrameType)
    [Anonymous Symbol]                       0x08001ca4   Section        0  cantp.o(.text.getFrameType)
    getPduLength                             0x08001ce1   Thumb Code    56  cantp.o(.text.getPduLength)
    [Anonymous Symbol]                       0x08001ce0   Section        0  cantp.o(.text.getPduLength)
    handleConsecutiveFrame                   0x08001d19   Thumb Code   338  cantp.o(.text.handleConsecutiveFrame)
    [Anonymous Symbol]                       0x08001d18   Section        0  cantp.o(.text.handleConsecutiveFrame)
    handleFirstFrame                         0x08001e6d   Thumb Code   278  cantp.o(.text.handleFirstFrame)
    [Anonymous Symbol]                       0x08001e6c   Section        0  cantp.o(.text.handleFirstFrame)
    handleFlowControlFrame                   0x08001f85   Thumb Code   156  cantp.o(.text.handleFlowControlFrame)
    [Anonymous Symbol]                       0x08001f84   Section        0  cantp.o(.text.handleFlowControlFrame)
    handleNextTxFrameSent                    0x08002021   Thumb Code   222  cantp.o(.text.handleNextTxFrameSent)
    [Anonymous Symbol]                       0x08002020   Section        0  cantp.o(.text.handleNextTxFrameSent)
    handleSingleFrame                        0x08002101   Thumb Code   178  cantp.o(.text.handleSingleFrame)
    [Anonymous Symbol]                       0x08002100   Section        0  cantp.o(.text.handleSingleFrame)
    initRx15765RuntimeData                   0x080021b5   Thumb Code    22  cantp.o(.text.initRx15765RuntimeData)
    [Anonymous Symbol]                       0x080021b4   Section        0  cantp.o(.text.initRx15765RuntimeData)
    initTx15765RuntimeData                   0x080021cd   Thumb Code    24  cantp.o(.text.initTx15765RuntimeData)
    [Anonymous Symbol]                       0x080021cc   Section        0  cantp.o(.text.initTx15765RuntimeData)
    [Anonymous Symbol]                       0x080021e4   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08002228   Section        0  can_app.o(.text.main_can)
    os_kernel_is_active                      0x08002359   Thumb Code    36  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08002358   Section        0  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x0800237c   Section        0  helper.o(.text.pdur_cantp_provide_rxbuffer)
    [Anonymous Symbol]                       0x08002384   Section        0  helper.o(.text.pdur_cantp_rxindication)
    prvAddCurrentTaskToDelayedList           0x0800238d   Thumb Code   128  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x0800238c   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x0800240d   Thumb Code   172  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x0800240c   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x080024b9   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x080024b8   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08002525   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08002524   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08002575   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08002574   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0800259d   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0800259c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x08002619   Thumb Code    32  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08002618   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x08002639   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x08002638   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x0800264d   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0800264c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0800266d   Thumb Code   118  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0800266c   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x080026e5   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x080026e4   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x08002711   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08002710   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x08002731   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08002730   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08002751   Thumb Code   152  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08002750   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080027e9   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080027e8   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08002859   Thumb Code    98  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08002858   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x080028bd   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x080028bc   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x080028fd   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x080028fc   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08002915   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08002914   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x08002931   Thumb Code    26  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08002930   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08002951   Thumb Code    88  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08002950   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x080029a9   Thumb Code   244  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x080029a8   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08002a9d   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08002a9c   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x08002b1d   Thumb Code    40  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08002b1c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08002b45   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08002b44   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08002b71   Thumb Code   120  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08002b70   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08002be9   Thumb Code    34  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08002be8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08002c0d   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08002c0c   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08002c25   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002c24   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002c98   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08002d94   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08002dac   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08002dcc   Section        0  can_app.o(.text.rx_activate)
    [Anonymous Symbol]                       0x08002e50   Section        0  helper.o(.text.rx_indication)
    scheduleRxIndication                     0x08002e59   Thumb Code   194  canif.o(.text.scheduleRxIndication)
    [Anonymous Symbol]                       0x08002e58   Section        0  canif.o(.text.scheduleRxIndication)
    scheduleTxConfirmation                   0x08002f1d   Thumb Code    74  canif.o(.text.scheduleTxConfirmation)
    [Anonymous Symbol]                       0x08002f1c   Section        0  canif.o(.text.scheduleTxConfirmation)
    sendFlowControlFrame                     0x08002f69   Thumb Code   160  cantp.o(.text.sendFlowControlFrame)
    [Anonymous Symbol]                       0x08002f68   Section        0  cantp.o(.text.sendFlowControlFrame)
    sendNextTxFrame                          0x08003009   Thumb Code   210  cantp.o(.text.sendNextTxFrame)
    [Anonymous Symbol]                       0x08003008   Section        0  cantp.o(.text.sendNextTxFrame)
    [Anonymous Symbol]                       0x080030dc   Section        0  helper.o(.text.tx_confirmation)
    [Anonymous Symbol]                       0x080030e4   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0800310c   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08003128   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08003144   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08003158   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08003170   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08003178   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x080031b4   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x080031d0   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x080031f0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0800320c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08003270   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x080032a4   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x080032b4   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x080032f8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08003314   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08003324   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08003344   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0800336c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x080033d8   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08003468   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x08003478   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08003524   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08003560   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x08003590   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x080035a8   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x080035cc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x08003600   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x0800361c   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08003688   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x080037c0   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x08003830   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08003958   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08003abc   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08003b18   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08003b80   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08003bc0   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08003be8   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08003bf4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08003d30   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08003d8c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08003e20   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08003e9c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08003f98   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x08004000   Section        0  timers.o(.text.xTimerGenericCommand)
    uxCriticalNesting                        0x20000080   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000080   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000088   Section       96  libspace.o(.bss)
    CanIf_ConfigPtr                          0x200000e8   Data           4  canif.o(.bss.CanIf_ConfigPtr)
    [Anonymous Symbol]                       0x200000e8   Section        0  canif.o(.bss.CanIf_ConfigPtr)
    CanIf_Global                             0x200000ec   Data           3  canif.o(.bss.CanIf_Global)
    [Anonymous Symbol]                       0x200000ec   Section        0  canif.o(.bss.CanIf_Global)
    cantxrx.txidx                            0x20000228   Data           4  can_app.o(.bss.cantxrx.txidx)
    [Anonymous Symbol]                       0x20000228   Section        0  can_app.o(.bss.cantxrx.txidx)
    clib_mutex_cb                            0x2000022c   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x2000022c   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x200003bc   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x200003bc   Section        0  clib_arm.o(.bss.clib_mutex_id)
    os_kernel_is_active.os_kernel_active     0x200003d0   Data           1  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x200003d0   Section        0  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x200003d1   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x200003d1   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000424   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000424   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000474   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000474   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x2000047c   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x2000047c   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000480   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000480   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000484   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000484   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000488   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000488   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x2000048c   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x2000048c   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000490   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000490   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000920   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000920   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002920   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002920   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002924   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002924   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002928   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002928   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000292c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000292c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002930   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002930   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002934   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002934   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002b34   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002b34   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002b90   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002b90   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002cd0   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002cd0   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002d2c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002d2c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002d40   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002d40   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20002d54   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20002d54   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20002d58   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002d58   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002d6c   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002d6c   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002d80   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002d80   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002d84   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002d84   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002d88   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002d88   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002d8c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002d8c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002d90   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002d90   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002d94   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002d94   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002d98   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002d98   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002d9c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002d9c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002da0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002da0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002db4   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002db4   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002db8   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002db8   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002dc0   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002dc0   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002dd4   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002dd4   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002de8   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002de8   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002dec   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002dec   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002df0   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002df0   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002df4   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002df4   Section        0  tasks.o(.bss.xYieldPending)
    yQueue                                   0x20002df8   Data           4  can_app.o(.bss.yQueue)
    [Anonymous Symbol]                       0x20002df8   Section        0  can_app.o(.bss.yQueue)
    Heap_Mem                                 0x20002e00   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002e00   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20003000   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20003000   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20003400   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000165   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000169   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000169   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000169   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800016f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000177   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000183   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000185   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000185   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000189   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000191   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08000199   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x0800019b   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x0800019d   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x0800019f   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001a5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001ad   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memcpy                           0x080001d1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001d1   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000237   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800025b   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800025b   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x0800026b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800026d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800026f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000271   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000271   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000271   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080002b9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x080002d5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002d5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002d5   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080002d9   Thumb Code     0  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000323   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800036d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000381   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000381   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000389   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000395   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000395   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000397   Thumb Code     0  indicate_semi.o(.text)
    CAN1_RX1_IRQHandler                      0x08000399   Thumb Code    62  can_app.o(.text.CAN1_RX1_IRQHandler)
    CAN1_SCE_IRQHandler                      0x080003d9   Thumb Code    60  can_app.o(.text.CAN1_SCE_IRQHandler)
    CAN_ClearITPendingBit                    0x08000415   Thumb Code   170  stm32f10x_can.o(.text.CAN_ClearITPendingBit)
    CAN_DBGFreeze                            0x080004c1   Thumb Code    18  stm32f10x_can.o(.text.CAN_DBGFreeze)
    CAN_DeInit                               0x080004d5   Thumb Code    40  stm32f10x_can.o(.text.CAN_DeInit)
    CAN_FilterInit                           0x080004fd   Thumb Code   172  stm32f10x_can.o(.text.CAN_FilterInit)
    CAN_ITConfig                             0x080005a9   Thumb Code    16  stm32f10x_can.o(.text.CAN_ITConfig)
    CAN_Init                                 0x080005b9   Thumb Code   258  stm32f10x_can.o(.text.CAN_Init)
    CAN_Receive                              0x080006bd   Thumb Code   160  stm32f10x_can.o(.text.CAN_Receive)
    CAN_SlaveStartBank                       0x0800075d   Thumb Code    44  stm32f10x_can.o(.text.CAN_SlaveStartBank)
    CAN_Sleep                                0x08000789   Thumb Code    26  stm32f10x_can.o(.text.CAN_Sleep)
    CAN_StructInit                           0x080007a5   Thumb Code    20  stm32f10x_can.o(.text.CAN_StructInit)
    CAN_Transmit                             0x080007b9   Thumb Code   162  stm32f10x_can.o(.text.CAN_Transmit)
    CAN_WakeUp                               0x0800085d   Thumb Code    40  stm32f10x_can.o(.text.CAN_WakeUp)
    CanIf_Arc_Error                          0x08000885   Thumb Code    52  canif.o(.text.CanIf_Arc_Error)
    CanIf_CancelTxConfirmation               0x080008fd   Thumb Code     2  canif.o(.text.CanIf_CancelTxConfirmation)
    CanIf_ControllerBusOff                   0x08000901   Thumb Code    54  canif.o(.text.CanIf_ControllerBusOff)
    CanIf_GetControllerMode                  0x08000959   Thumb Code    20  canif.o(.text.CanIf_GetControllerMode)
    CanIf_GetPduMode                         0x0800096d   Thumb Code    20  canif.o(.text.CanIf_GetPduMode)
    CanIf_Init                               0x08000981   Thumb Code    40  canif.o(.text.CanIf_Init)
    CanIf_PreInit_InitController             0x080009a9   Thumb Code    30  canif.o(.text.CanIf_PreInit_InitController)
    CanIf_RxIndication                       0x080009c9   Thumb Code     8  canif.o(.text.CanIf_RxIndication)
    CanIf_SetControllerMode                  0x080009d1   Thumb Code   206  canif.o(.text.CanIf_SetControllerMode)
    CanIf_SetPduMode                         0x08000aa1   Thumb Code   134  canif.o(.text.CanIf_SetPduMode)
    CanIf_SetWakeupEvent                     0x08000b29   Thumb Code     2  canif.o(.text.CanIf_SetWakeupEvent)
    CanIf_Transmit                           0x08000b2d   Thumb Code   102  canif.o(.text.CanIf_Transmit)
    CanIf_TxConfirmation                     0x08000b95   Thumb Code     8  canif.o(.text.CanIf_TxConfirmation)
    CanTp_Init                               0x08000b9d   Thumb Code    82  cantp.o(.text.CanTp_Init)
    CanTp_MainFunction                       0x08000bf1   Thumb Code   522  cantp.o(.text.CanTp_MainFunction)
    CanTp_RxIndication                       0x08000dfd   Thumb Code   188  cantp.o(.text.CanTp_RxIndication)
    CanTp_Transmit                           0x08000eb9   Thumb Code   354  cantp.o(.text.CanTp_Transmit)
    CanTp_TxConfirmation                     0x0800101d   Thumb Code   100  cantp.o(.text.CanTp_TxConfirmation)
    Can_EnableControllerInterrupts           0x08001081   Thumb Code   138  can.o(.text.Can_EnableControllerInterrupts)
    Can_ErrIsr_wrap                          0x0800110d   Thumb Code     2  can.o(.text.Can_ErrIsr_wrap)
    Can_Init                                 0x0800112d   Thumb Code   110  can.o(.text.Can_Init)
    Can_InitController                       0x0800119d   Thumb Code   252  can.o(.text.Can_InitController)
    Can_RxIsr_wrap                           0x08001345   Thumb Code     8  can.o(.text.Can_RxIsr_wrap)
    Can_SetControllerMode                    0x0800134d   Thumb Code    92  can.o(.text.Can_SetControllerMode)
    Can_TxIsr_wrap                           0x08001431   Thumb Code     8  can.o(.text.Can_TxIsr_wrap)
    Can_Write                                0x08001439   Thumb Code   182  can.o(.text.Can_Write)
    GPIO_Init                                0x080014f1   Thumb Code   176  stm32f10x_gpio.o(.text.GPIO_Init)
    GPIO_PinRemapConfig                      0x080015a1   Thumb Code   116  stm32f10x_gpio.o(.text.GPIO_PinRemapConfig)
    NVIC_Init                                0x08001625   Thumb Code    94  misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x08001691   Thumb Code    68  port.o(.text.PendSV_Handler)
    RCC_APB1PeriphClockCmd                   0x080016d5   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x080016ed   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x08001705   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    SVC_Handler                              0x08001721   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x0800180d   Thumb Code    26  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08001829   Thumb Code    86  system_stm32f10x.o(.text.SystemInit)
    USB_HP_CAN1_TX_IRQHandler                0x08001881   Thumb Code    60  can_app.o(.text.USB_HP_CAN1_TX_IRQHandler)
    USB_LP_CAN1_RX0_IRQHandler               0x080018bd   Thumb Code    62  can_app.o(.text.USB_LP_CAN1_RX0_IRQHandler)
    _mutex_acquire                           0x08001921   Thumb Code    26  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x0800193d   Thumb Code    50  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08001971   Thumb Code    88  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x080019c9   Thumb Code    28  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080019e5   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    arc_error                                0x080019e9   Thumb Code     8  helper.o(.text.arc_error)
    cancel_tx_confirmation                   0x08001b15   Thumb Code     8  helper.o(.text.cancel_tx_confirmation)
    canif_busoff_notification                0x08001b1d   Thumb Code     2  helper.o(.text.canif_busoff_notification)
    canif_error_notificaton                  0x08001b21   Thumb Code     2  helper.o(.text.canif_error_notificaton)
    canif_user_txconfirmation                0x08001b25   Thumb Code     8  helper.o(.text.canif_user_txconfirmation)
    canif_wakeup_notification                0x08001b2d   Thumb Code     2  helper.o(.text.canif_wakeup_notification)
    canif_wakeup_validnotification           0x08001b31   Thumb Code     2  helper.o(.text.canif_wakeup_validnotification)
    cantp_provide_rxbuffer                   0x08001b35   Thumb Code    56  can_app.o(.text.cantp_provide_rxbuffer)
    controller_wakeup                        0x08001ba1   Thumb Code     8  helper.o(.text.controller_wakeup)
    controllerbus_off                        0x08001ba9   Thumb Code     8  helper.o(.text.controllerbus_off)
    main                                     0x080021e5   Thumb Code    66  main.o(.text.main)
    main_can                                 0x08002229   Thumb Code   304  can_app.o(.text.main_can)
    pdur_cantp_provide_rxbuffer              0x0800237d   Thumb Code     8  helper.o(.text.pdur_cantp_provide_rxbuffer)
    pdur_cantp_rxindication                  0x08002385   Thumb Code     8  helper.o(.text.pdur_cantp_rxindication)
    pvPortMalloc                             0x08002c99   Thumb Code   252  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08002d95   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08002dad   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    rx_activate                              0x08002dcd   Thumb Code   132  can_app.o(.text.rx_activate)
    rx_indication                            0x08002e51   Thumb Code     8  helper.o(.text.rx_indication)
    tx_confirmation                          0x080030dd   Thumb Code     8  helper.o(.text.tx_confirmation)
    uxListRemove                             0x080030e5   Thumb Code    40  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x0800310d   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08003129   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08003145   Thumb Code    18  main.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08003159   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08003171   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08003179   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x080031b5   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x080031d1   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x080031f1   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x0800320d   Thumb Code   100  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08003271   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x080032a5   Thumb Code    16  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x080032b5   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x080032f9   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08003315   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08003325   Thumb Code    30  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08003345   Thumb Code    40  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x0800336d   Thumb Code   108  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x080033d9   Thumb Code   144  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08003469   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08003479   Thumb Code   170  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08003525   Thumb Code    58  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x08003561   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x08003591   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x080035a9   Thumb Code    34  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x080035cd   Thumb Code    50  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x08003601   Thumb Code    28  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x0800361d   Thumb Code   106  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x08003689   Thumb Code   310  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x080037c1   Thumb Code   112  queue.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x08003831   Thumb Code   296  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08003959   Thumb Code   354  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08003abd   Thumb Code    92  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08003b19   Thumb Code   102  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x08003b81   Thumb Code    62  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08003bc1   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08003be9   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08003bf5   Thumb Code   314  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08003d31   Thumb Code    92  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08003d8d   Thumb Code   146  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08003e21   Thumb Code   122  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08003e9d   Thumb Code   252  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08003f99   Thumb Code   104  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x08004001   Thumb Code    86  timers.o(.text.xTimerGenericCommand)
    CanCbks                                  0x08004058   Data          24  helper.o(.rodata.CanCbks)
    CanConfigSet                             0x08004070   Data           8  helper.o(.rodata.CanConfigSet)
    CanCtrlConfig                            0x08004078   Data          24  helper.o(.rodata.CanCtrlConfig)
    CanFilterMaskRef                         0x08004090   Data          17  helper.o(.rodata.CanFilterMaskRef)
    CanHoh                                   0x080040a4   Data          48  helper.o(.rodata.CanHoh)
    CanIfCanRxPduHrhRef                      0x080040d4   Data          12  helper.o(.rodata.CanIfCanRxPduHrhRef)
    CanIfCanTxPduHthRef                      0x080040e0   Data           4  helper.o(.rodata.CanIfCanTxPduHthRef)
    CanIfCtlrConfig                          0x080040e4   Data           8  helper.o(.rodata.CanIfCtlrConfig)
    CanIfDispatchConfig                      0x080040ec   Data          16  helper.o(.rodata.CanIfDispatchConfig)
    CanIfHohConfig                           0x080040fc   Data          24  helper.o(.rodata.CanIfHohConfig)
    CanIfHrhConfig1                          0x08004114   Data          12  helper.o(.rodata.CanIfHrhConfig1)
    CanIfHrhConfig2                          0x08004120   Data          12  helper.o(.rodata.CanIfHrhConfig2)
    CanIfHthConfig1                          0x0800412c   Data           4  helper.o(.rodata.CanIfHthConfig1)
    CanIfHthConfig2                          0x08004130   Data           4  helper.o(.rodata.CanIfHthConfig2)
    CanIfRxPduConfig                         0x08004134   Data          32  helper.o(.rodata.CanIfRxPduConfig)
    CanIfTxPduConfig                         0x08004154   Data          24  helper.o(.rodata.CanIfTxPduConfig)
    CanTpConfig                              0x0800416c   Data          12  helper.o(.rodata.CanTpConfig)
    CanTpGeneral                             0x08004178   Data           4  helper.o(.rodata.CanTpGeneral)
    CanTpNSduConfigList                      0x0800417c   Data          56  helper.o(.rodata.CanTpNSduConfigList)
    CanTpRxIdList                            0x080041b4   Data          24  helper.o(.rodata.CanTpRxIdList)
    CommConfig                               0x080041cc   Data          12  helper.o(.rodata.CommConfig)
    InitConfig                               0x080041d8   Data          28  helper.o(.rodata.InitConfig)
    Region$$Table$$Base                      0x080041f4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08004214   Number         0  anon$$obj.o(Region$$Table)
    CanConfig                                0x20000000   Data           4  helper.o(.data.CanConfig)
    CanifConfig                              0x20000004   Data          24  helper.o(.data.CanifConfig)
    SystemCoreClock                          0x2000001c   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    rxbuf                                    0x20000020   Data          32  can_app.o(.data.rxbuf)
    txbuf                                    0x20000040   Data          32  can_app.o(.data.txbuf)
    txbuf1                                   0x20000060   Data           8  can_app.o(.data.txbuf1)
    txbuf2                                   0x20000068   Data           8  can_app.o(.data.txbuf2)
    txbuf3                                   0x20000070   Data           8  can_app.o(.data.txbuf3)
    txbuf4                                   0x20000078   Data           8  can_app.o(.data.txbuf4)
    __libspace_start                         0x20000088   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200000e8   Data           0  libspace.o(.bss)
    CanTpRunTimeData                         0x200000f0   Data         180  cantp.o(.bss.CanTpRunTimeData)
    CanUnit                                  0x200001a4   Data          72  can.o(.bss.CanUnit)
    GPIO_InitStructure                       0x200001ec   Data           4  main.o(.bss.GPIO_InitStructure)
    can_global                               0x200001f0   Data          56  can.o(.bss.can_global)
    pxCurrentTCB                             0x20000478   Data           4  tasks.o(.bss.pxCurrentTCB)
    rxbuf1                                   0x200008f0   Data           8  can_app.o(.bss.rxbuf1)
    rxbuf2                                   0x200008f8   Data           8  can_app.o(.bss.rxbuf2)
    rxbuf3                                   0x20000900   Data           8  can_app.o(.bss.rxbuf3)
    rxbuf4                                   0x20000908   Data           8  can_app.o(.bss.rxbuf4)
    rxbufptr                                 0x20000910   Data           4  can_app.o(.bss.rxbufptr)
    rxlen                                    0x20000914   Data           4  can_app.o(.bss.rxlen)
    txbufptr                                 0x20000918   Data           4  can_app.o(.bss.txbufptr)
    txlen                                    0x2000091c   Data           4  can_app.o(.bss.txlen)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000191

  Load Region LR_1 (Base: 0x08000000, Size: 0x00004298, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00004214, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          951    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO         1410  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1575    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1577    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1579    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1439    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1446    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1448    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1451    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1453    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1455    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1458    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1460    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1462    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1464    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1466    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1468    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1470    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1472    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1474    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1476    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1478    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1482    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1484    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1486    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1488    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000002   Code   RO         1489    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000164   0x08000164   0x00000002   Code   RO         1511    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1526    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1528    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1531    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1534    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1536    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1539    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000002   Code   RO         1540    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000168   0x08000168   0x00000000   Code   RO         1412    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000168   0x08000168   0x00000000   Code   RO         1418    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000168   0x08000168   0x00000006   Code   RO         1430    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800016e   0x0800016e   0x00000008   Code   RO         1419    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000176   0x08000176   0x00000004   Code   RO         1421    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1423    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000008   Code   RO         1424    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000182   0x08000182   0x00000002   Code   RO         1443    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000184   0x08000184   0x00000000   Code   RO         1491    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000184   0x08000184   0x00000004   Code   RO         1492    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000188   0x08000188   0x00000006   Code   RO         1493    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800018e   0x0800018e   0x00000002   PAD
    0x08000190   0x08000190   0x00000040   Code   RO          952  * .text               startup_stm32f10x_md.o
    0x080001d0   0x080001d0   0x0000008a   Code   RO         1404    .text               c_w.l(rt_memcpy_v6.o)
    0x0800025a   0x0800025a   0x00000010   Code   RO         1406    .text               c_w.l(aeabi_memset4.o)
    0x0800026a   0x0800026a   0x00000006   Code   RO         1408    .text               c_w.l(heapauxi.o)
    0x08000270   0x08000270   0x00000064   Code   RO         1413    .text               c_w.l(rt_memcpy_w.o)
    0x080002d4   0x080002d4   0x0000004e   Code   RO         1415    .text               c_w.l(rt_memclr_w.o)
    0x08000322   0x08000322   0x0000004a   Code   RO         1432    .text               c_w.l(sys_stackheap_outer.o)
    0x0800036c   0x0800036c   0x00000012   Code   RO         1434    .text               c_w.l(exit.o)
    0x0800037e   0x0800037e   0x00000002   PAD
    0x08000380   0x08000380   0x00000008   Code   RO         1440    .text               c_w.l(libspace.o)
    0x08000388   0x08000388   0x0000000c   Code   RO         1501    .text               c_w.l(sys_exit.o)
    0x08000394   0x08000394   0x00000002   Code   RO         1516    .text               c_w.l(use_no_semi.o)
    0x08000396   0x08000396   0x00000000   Code   RO         1518    .text               c_w.l(indicate_semi.o)
    0x08000396   0x08000396   0x00000002   PAD
    0x08000398   0x08000398   0x0000003e   Code   RO           40    .text.CAN1_RX1_IRQHandler  can_app.o
    0x080003d6   0x080003d6   0x00000002   PAD
    0x080003d8   0x080003d8   0x0000003c   Code   RO           42    .text.CAN1_SCE_IRQHandler  can_app.o
    0x08000414   0x08000414   0x000000aa   Code   RO          596    .text.CAN_ClearITPendingBit  stm32f10x_can.o
    0x080004be   0x080004be   0x00000002   PAD
    0x080004c0   0x080004c0   0x00000012   Code   RO          558    .text.CAN_DBGFreeze  stm32f10x_can.o
    0x080004d2   0x080004d2   0x00000002   PAD
    0x080004d4   0x080004d4   0x00000028   Code   RO          548    .text.CAN_DeInit    stm32f10x_can.o
    0x080004fc   0x080004fc   0x000000ac   Code   RO          552    .text.CAN_FilterInit  stm32f10x_can.o
    0x080005a8   0x080005a8   0x00000010   Code   RO          586    .text.CAN_ITConfig  stm32f10x_can.o
    0x080005b8   0x080005b8   0x00000102   Code   RO          550    .text.CAN_Init      stm32f10x_can.o
    0x080006ba   0x080006ba   0x00000002   PAD
    0x080006bc   0x080006bc   0x000000a0   Code   RO          568    .text.CAN_Receive   stm32f10x_can.o
    0x0800075c   0x0800075c   0x0000002c   Code   RO          556    .text.CAN_SlaveStartBank  stm32f10x_can.o
    0x08000788   0x08000788   0x0000001a   Code   RO          576    .text.CAN_Sleep     stm32f10x_can.o
    0x080007a2   0x080007a2   0x00000002   PAD
    0x080007a4   0x080007a4   0x00000014   Code   RO          554    .text.CAN_StructInit  stm32f10x_can.o
    0x080007b8   0x080007b8   0x000000a2   Code   RO          562    .text.CAN_Transmit  stm32f10x_can.o
    0x0800085a   0x0800085a   0x00000002   PAD
    0x0800085c   0x0800085c   0x00000028   Code   RO          578    .text.CAN_WakeUp    stm32f10x_can.o
    0x08000884   0x08000884   0x00000034   Code   RO          210    .text.CanIf_Arc_Error  canif.o
    0x080008b8   0x080008b8   0x00000042   Code   RO          212    .text.CanIf_Arc_FindHrhChannel  canif.o
    0x080008fa   0x080008fa   0x00000002   PAD
    0x080008fc   0x080008fc   0x00000002   Code   RO          204    .text.CanIf_CancelTxConfirmation  canif.o
    0x080008fe   0x080008fe   0x00000002   PAD
    0x08000900   0x08000900   0x00000036   Code   RO          206    .text.CanIf_ControllerBusOff  canif.o
    0x08000936   0x08000936   0x00000002   PAD
    0x08000938   0x08000938   0x00000020   Code   RO          192    .text.CanIf_FindTxPduEntry  canif.o
    0x08000958   0x08000958   0x00000014   Code   RO          184    .text.CanIf_GetControllerMode  canif.o
    0x0800096c   0x0800096c   0x00000014   Code   RO          194    .text.CanIf_GetPduMode  canif.o
    0x08000980   0x08000980   0x00000028   Code   RO          178    .text.CanIf_Init    canif.o
    0x080009a8   0x080009a8   0x0000001e   Code   RO          180    .text.CanIf_PreInit_InitController  canif.o
    0x080009c6   0x080009c6   0x00000002   PAD
    0x080009c8   0x080009c8   0x00000008   Code   RO          200    .text.CanIf_RxIndication  canif.o
    0x080009d0   0x080009d0   0x000000ce   Code   RO          186    .text.CanIf_SetControllerMode  canif.o
    0x08000a9e   0x08000a9e   0x00000002   PAD
    0x08000aa0   0x08000aa0   0x00000086   Code   RO          188    .text.CanIf_SetPduMode  canif.o
    0x08000b26   0x08000b26   0x00000002   PAD
    0x08000b28   0x08000b28   0x00000002   Code   RO          208    .text.CanIf_SetWakeupEvent  canif.o
    0x08000b2a   0x08000b2a   0x00000002   PAD
    0x08000b2c   0x08000b2c   0x00000066   Code   RO          190    .text.CanIf_Transmit  canif.o
    0x08000b92   0x08000b92   0x00000002   PAD
    0x08000b94   0x08000b94   0x00000008   Code   RO          196    .text.CanIf_TxConfirmation  canif.o
    0x08000b9c   0x08000b9c   0x00000052   Code   RO          228    .text.CanTp_Init    cantp.o
    0x08000bee   0x08000bee   0x00000002   PAD
    0x08000bf0   0x08000bf0   0x0000020a   Code   RO          252    .text.CanTp_MainFunction  cantp.o
    0x08000dfa   0x08000dfa   0x00000002   PAD
    0x08000dfc   0x08000dfc   0x000000bc   Code   RO          234    .text.CanTp_RxIndication  cantp.o
    0x08000eb8   0x08000eb8   0x00000162   Code   RO          224    .text.CanTp_Transmit  cantp.o
    0x0800101a   0x0800101a   0x00000002   PAD
    0x0800101c   0x0800101c   0x00000064   Code   RO          246    .text.CanTp_TxConfirmation  cantp.o
    0x08001080   0x08001080   0x0000008a   Code   RO          150    .text.Can_EnableControllerInterrupts  can.o
    0x0800110a   0x0800110a   0x00000002   PAD
    0x0800110c   0x0800110c   0x00000002   Code   RO          138    .text.Can_ErrIsr_wrap  can.o
    0x0800110e   0x0800110e   0x00000002   PAD
    0x08001110   0x08001110   0x0000001c   Code   RO          154    .text.Can_FindHoh   can.o
    0x0800112c   0x0800112c   0x0000006e   Code   RO          140    .text.Can_Init      can.o
    0x0800119a   0x0800119a   0x00000002   PAD
    0x0800119c   0x0800119c   0x000000fc   Code   RO          142    .text.Can_InitController  can.o
    0x08001298   0x08001298   0x000000ac   Code   RO          132    .text.Can_RxIsr     can.o
    0x08001344   0x08001344   0x00000008   Code   RO          130    .text.Can_RxIsr_wrap  can.o
    0x0800134c   0x0800134c   0x0000005c   Code   RO          160    .text.Can_SetControllerMode  can.o
    0x080013a8   0x080013a8   0x00000088   Code   RO          136    .text.Can_TxIsr     can.o
    0x08001430   0x08001430   0x00000008   Code   RO          134    .text.Can_TxIsr_wrap  can.o
    0x08001438   0x08001438   0x000000b6   Code   RO          152    .text.Can_Write     can.o
    0x080014ee   0x080014ee   0x00000002   PAD
    0x080014f0   0x080014f0   0x000000b0   Code   RO          610    .text.GPIO_Init     stm32f10x_gpio.o
    0x080015a0   0x080015a0   0x00000074   Code   RO          636    .text.GPIO_PinRemapConfig  stm32f10x_gpio.o
    0x08001614   0x08001614   0x0000000e   Code   RO          148    .text.GetController  can.o
    0x08001622   0x08001622   0x00000002   PAD
    0x08001624   0x08001624   0x0000005e   Code   RO          532    .text.NVIC_Init     misc.o
    0x08001682   0x08001682   0x0000000e   PAD
    0x08001690   0x08001690   0x00000044   Code   RO         1052    .text.PendSV_Handler  port.o
    0x080016d4   0x080016d4   0x00000018   Code   RO          696    .text.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x080016ec   0x080016ec   0x00000018   Code   RO          700    .text.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x08001704   0x08001704   0x00000018   Code   RO          694    .text.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x0800171c   0x0800171c   0x00000004   PAD
    0x08001720   0x08001720   0x00000024   Code   RO         1038    .text.SVC_Handler   port.o
    0x08001744   0x08001744   0x00000008   Code   RO          961    .text.SetSysClock   system_stm32f10x.o
    0x0800174c   0x0800174c   0x000000be   Code   RO          965    .text.SetSysClockTo72  system_stm32f10x.o
    0x0800180a   0x0800180a   0x00000002   PAD
    0x0800180c   0x0800180c   0x0000001a   Code   RO          325    .text.SysTick_Handler  cmsis_os2.o
    0x08001826   0x08001826   0x00000002   PAD
    0x08001828   0x08001828   0x00000056   Code   RO          959    .text.SystemInit    system_stm32f10x.o
    0x0800187e   0x0800187e   0x00000002   PAD
    0x08001880   0x08001880   0x0000003c   Code   RO           36    .text.USB_HP_CAN1_TX_IRQHandler  can_app.o
    0x080018bc   0x080018bc   0x0000003e   Code   RO           38    .text.USB_LP_CAN1_RX0_IRQHandler  can_app.o
    0x080018fa   0x080018fa   0x00000002   PAD
    0x080018fc   0x080018fc   0x0000000c   Code   RO          158    .text._Irq_Restore  can.o
    0x08001908   0x08001908   0x00000016   Code   RO          156    .text._Irq_Save     can.o
    0x0800191e   0x0800191e   0x00000002   PAD
    0x08001920   0x08001920   0x0000001a   Code   RO          306    .text._mutex_acquire  clib_arm.o
    0x0800193a   0x0800193a   0x00000002   PAD
    0x0800193c   0x0800193c   0x00000032   Code   RO          310    .text._mutex_free   clib_arm.o
    0x0800196e   0x0800196e   0x00000002   PAD
    0x08001970   0x08001970   0x00000058   Code   RO          304    .text._mutex_initialize  clib_arm.o
    0x080019c8   0x080019c8   0x0000001c   Code   RO          308    .text._mutex_release  clib_arm.o
    0x080019e4   0x080019e4   0x00000002   Code   RO          298    .text._platform_post_stackheap_init  clib_arm.o
    0x080019e6   0x080019e6   0x00000002   PAD
    0x080019e8   0x080019e8   0x00000008   Code   RO           78    .text.arc_error     helper.o
    0x080019f0   0x080019f0   0x00000084   Code   RO          226    .text.calcRequiredProtocolFrameType  cantp.o
    0x08001a74   0x08001a74   0x0000004e   Code   RO          266    .text.canReceivePaddingHelper  cantp.o
    0x08001ac2   0x08001ac2   0x00000002   PAD
    0x08001ac4   0x08001ac4   0x0000004e   Code   RO          264    .text.canTansmitPaddingHelper  cantp.o
    0x08001b12   0x08001b12   0x00000002   PAD
    0x08001b14   0x08001b14   0x00000008   Code   RO           68    .text.cancel_tx_confirmation  helper.o
    0x08001b1c   0x08001b1c   0x00000002   Code   RO           80    .text.canif_busoff_notification  helper.o
    0x08001b1e   0x08001b1e   0x00000002   PAD
    0x08001b20   0x08001b20   0x00000002   Code   RO           86    .text.canif_error_notificaton  helper.o
    0x08001b22   0x08001b22   0x00000002   PAD
    0x08001b24   0x08001b24   0x00000008   Code   RO           88    .text.canif_user_txconfirmation  helper.o
    0x08001b2c   0x08001b2c   0x00000002   Code   RO           82    .text.canif_wakeup_notification  helper.o
    0x08001b2e   0x08001b2e   0x00000002   PAD
    0x08001b30   0x08001b30   0x00000002   Code   RO           84    .text.canif_wakeup_validnotification  helper.o
    0x08001b32   0x08001b32   0x00000002   PAD
    0x08001b34   0x08001b34   0x00000038   Code   RO           28    .text.cantp_provide_rxbuffer  can_app.o
    0x08001b6c   0x08001b6c   0x00000032   Code   RO           34    .text.cantxrx       can_app.o
    0x08001b9e   0x08001b9e   0x00000002   PAD
    0x08001ba0   0x08001ba0   0x00000008   Code   RO           76    .text.controller_wakeup  helper.o
    0x08001ba8   0x08001ba8   0x00000008   Code   RO           72    .text.controllerbus_off  helper.o
    0x08001bb0   0x08001bb0   0x0000002a   Code   RO          262    .text.copySegmentToLocalRxBuffer  cantp.o
    0x08001bda   0x08001bda   0x00000002   PAD
    0x08001bdc   0x08001bdc   0x000000b8   Code   RO          256    .text.copySegmentToPduRRxBuffer  cantp.o
    0x08001c94   0x08001c94   0x0000000e   Code   RO          162    .text.disable_irq   can.o
    0x08001ca2   0x08001ca2   0x00000002   PAD
    0x08001ca4   0x08001ca4   0x0000003c   Code   RO          236    .text.getFrameType  cantp.o
    0x08001ce0   0x08001ce0   0x00000038   Code   RO          260    .text.getPduLength  cantp.o
    0x08001d18   0x08001d18   0x00000152   Code   RO          242    .text.handleConsecutiveFrame  cantp.o
    0x08001e6a   0x08001e6a   0x00000002   PAD
    0x08001e6c   0x08001e6c   0x00000116   Code   RO          240    .text.handleFirstFrame  cantp.o
    0x08001f82   0x08001f82   0x00000002   PAD
    0x08001f84   0x08001f84   0x0000009c   Code   RO          244    .text.handleFlowControlFrame  cantp.o
    0x08002020   0x08002020   0x000000de   Code   RO          248    .text.handleNextTxFrameSent  cantp.o
    0x080020fe   0x080020fe   0x00000002   PAD
    0x08002100   0x08002100   0x000000b2   Code   RO          238    .text.handleSingleFrame  cantp.o
    0x080021b2   0x080021b2   0x00000002   PAD
    0x080021b4   0x080021b4   0x00000016   Code   RO          232    .text.initRx15765RuntimeData  cantp.o
    0x080021ca   0x080021ca   0x00000002   PAD
    0x080021cc   0x080021cc   0x00000018   Code   RO          230    .text.initTx15765RuntimeData  cantp.o
    0x080021e4   0x080021e4   0x00000042   Code   RO            6    .text.main          main.o
    0x08002226   0x08002226   0x00000002   PAD
    0x08002228   0x08002228   0x00000130   Code   RO           32    .text.main_can      can_app.o
    0x08002358   0x08002358   0x00000024   Code   RO          302    .text.os_kernel_is_active  clib_arm.o
    0x0800237c   0x0800237c   0x00000008   Code   RO           92    .text.pdur_cantp_provide_rxbuffer  helper.o
    0x08002384   0x08002384   0x00000008   Code   RO           90    .text.pdur_cantp_rxindication  helper.o
    0x0800238c   0x0800238c   0x00000080   Code   RO         1197    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x0800240c   0x0800240c   0x000000ac   Code   RO         1183    .text.prvAddNewTaskToReadyList  tasks.o
    0x080024b8   0x080024b8   0x0000006a   Code   RO         1334    .text.prvCheckForValidListAndQueue  timers.o
    0x08002522   0x08002522   0x00000002   PAD
    0x08002524   0x08002524   0x0000004e   Code   RO         1301    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08002572   0x08002572   0x00000002   PAD
    0x08002574   0x08002574   0x00000026   Code   RO         1139    .text.prvCopyDataFromQueue  queue.o
    0x0800259a   0x0800259a   0x00000002   PAD
    0x0800259c   0x0800259c   0x0000007a   Code   RO         1127    .text.prvCopyDataToQueue  queue.o
    0x08002616   0x08002616   0x00000002   PAD
    0x08002618   0x08002618   0x00000020   Code   RO         1189    .text.prvDeleteTCB  tasks.o
    0x08002638   0x08002638   0x00000012   Code   RO         1143    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0800264a   0x0800264a   0x00000002   PAD
    0x0800264c   0x0800264c   0x00000020   Code   RO         1372    .text.prvGetNextExpireTime  timers.o
    0x0800266c   0x0800266c   0x00000076   Code   RO         1067    .text.prvHeapInit   heap_4.o
    0x080026e2   0x080026e2   0x00000002   PAD
    0x080026e4   0x080026e4   0x0000002a   Code   RO         1223    .text.prvIdleTask   tasks.o
    0x0800270e   0x0800270e   0x00000002   PAD
    0x08002710   0x08002710   0x00000020   Code   RO         1107    .text.prvInitialiseMutex  queue.o
    0x08002730   0x08002730   0x00000020   Code   RO         1101    .text.prvInitialiseNewQueue  queue.o
    0x08002750   0x08002750   0x00000098   Code   RO         1181    .text.prvInitialiseNewTask  tasks.o
    0x080027e8   0x080027e8   0x00000070   Code   RO         1299    .text.prvInitialiseTaskLists  tasks.o
    0x08002858   0x08002858   0x00000062   Code   RO         1069    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x080028ba   0x080028ba   0x00000002   PAD
    0x080028bc   0x080028bc   0x00000040   Code   RO         1384    .text.prvInsertTimerInActiveList  timers.o
    0x080028fc   0x080028fc   0x00000018   Code   RO         1141    .text.prvIsQueueEmpty  queue.o
    0x08002914   0x08002914   0x0000001c   Code   RO         1129    .text.prvIsQueueFull  queue.o
    0x08002930   0x08002930   0x00000020   Code   RO         1044    .text.prvPortStartFirstTask  port.o
    0x08002950   0x08002950   0x00000058   Code   RO         1380    .text.prvProcessExpiredTimer  timers.o
    0x080029a8   0x080029a8   0x000000f4   Code   RO         1376    .text.prvProcessReceivedCommands  timers.o
    0x08002a9c   0x08002a9c   0x00000080   Code   RO         1374    .text.prvProcessTimerOrBlockTask  timers.o
    0x08002b1c   0x08002b1c   0x00000028   Code   RO         1191    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08002b44   0x08002b44   0x0000002a   Code   RO         1378    .text.prvSampleTimeNow  timers.o
    0x08002b6e   0x08002b6e   0x00000002   PAD
    0x08002b70   0x08002b70   0x00000078   Code   RO         1382    .text.prvSwitchTimerLists  timers.o
    0x08002be8   0x08002be8   0x00000022   Code   RO         1036    .text.prvTaskExitError  port.o
    0x08002c0a   0x08002c0a   0x00000002   PAD
    0x08002c0c   0x08002c0c   0x00000016   Code   RO         1336    .text.prvTimerTask  timers.o
    0x08002c22   0x08002c22   0x00000002   PAD
    0x08002c24   0x08002c24   0x00000072   Code   RO         1131    .text.prvUnlockQueue  queue.o
    0x08002c96   0x08002c96   0x00000002   PAD
    0x08002c98   0x08002c98   0x000000fc   Code   RO         1065    .text.pvPortMalloc  heap_4.o
    0x08002d94   0x08002d94   0x00000018   Code   RO         1283    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x08002dac   0x08002dac   0x00000020   Code   RO         1034    .text.pxPortInitialiseStack  port.o
    0x08002dcc   0x08002dcc   0x00000084   Code   RO           24    .text.rx_activate   can_app.o
    0x08002e50   0x08002e50   0x00000008   Code   RO           70    .text.rx_indication  helper.o
    0x08002e58   0x08002e58   0x000000c2   Code   RO          202    .text.scheduleRxIndication  canif.o
    0x08002f1a   0x08002f1a   0x00000002   PAD
    0x08002f1c   0x08002f1c   0x0000004a   Code   RO          198    .text.scheduleTxConfirmation  canif.o
    0x08002f66   0x08002f66   0x00000002   PAD
    0x08002f68   0x08002f68   0x000000a0   Code   RO          258    .text.sendFlowControlFrame  cantp.o
    0x08003008   0x08003008   0x000000d2   Code   RO          254    .text.sendNextTxFrame  cantp.o
    0x080030da   0x080030da   0x00000002   PAD
    0x080030dc   0x080030dc   0x00000008   Code   RO           74    .text.tx_confirmation  helper.o
    0x080030e4   0x080030e4   0x00000028   Code   RO         1024    .text.uxListRemove  list.o
    0x0800310c   0x0800310c   0x0000001a   Code   RO          481    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08003126   0x08003126   0x00000002   PAD
    0x08003128   0x08003128   0x0000001a   Code   RO          483    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08003142   0x08003142   0x00000002   PAD
    0x08003144   0x08003144   0x00000012   Code   RO           10    .text.vApplicationStackOverflowHook  main.o
    0x08003156   0x08003156   0x00000002   PAD
    0x08003158   0x08003158   0x00000016   Code   RO         1016    .text.vListInitialise  list.o
    0x0800316e   0x0800316e   0x00000002   PAD
    0x08003170   0x08003170   0x00000006   Code   RO         1018    .text.vListInitialiseItem  list.o
    0x08003176   0x08003176   0x00000002   PAD
    0x08003178   0x08003178   0x0000003a   Code   RO         1022    .text.vListInsert   list.o
    0x080031b2   0x080031b2   0x00000002   PAD
    0x080031b4   0x080031b4   0x0000001c   Code   RO         1020    .text.vListInsertEnd  list.o
    0x080031d0   0x080031d0   0x00000020   Code   RO         1048    .text.vPortEnterCritical  port.o
    0x080031f0   0x080031f0   0x0000001a   Code   RO         1050    .text.vPortExitCritical  port.o
    0x0800320a   0x0800320a   0x00000002   PAD
    0x0800320c   0x0800320c   0x00000064   Code   RO         1071    .text.vPortFree     heap_4.o
    0x08003270   0x08003270   0x00000034   Code   RO         1042    .text.vPortSetupTimerInterrupt  port.o
    0x080032a4   0x080032a4   0x00000010   Code   RO         1157    .text.vQueueDelete  queue.o
    0x080032b4   0x080032b4   0x00000044   Code   RO         1169    .text.vQueueWaitForMessageRestricted  queue.o
    0x080032f8   0x080032f8   0x0000001a   Code   RO         1255    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08003312   0x08003312   0x00000002   PAD
    0x08003314   0x08003314   0x0000000e   Code   RO         1259    .text.vTaskMissedYield  tasks.o
    0x08003322   0x08003322   0x00000002   PAD
    0x08003324   0x08003324   0x0000001e   Code   RO         1243    .text.vTaskPlaceOnEventList  tasks.o
    0x08003342   0x08003342   0x00000002   PAD
    0x08003344   0x08003344   0x00000028   Code   RO         1247    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0800336c   0x0800336c   0x0000006c   Code   RO         1279    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x080033d8   0x080033d8   0x00000090   Code   RO         1221    .text.vTaskStartScheduler  tasks.o
    0x08003468   0x08003468   0x00000010   Code   RO         1195    .text.vTaskSuspendAll  tasks.o
    0x08003478   0x08003478   0x000000aa   Code   RO         1213    .text.vTaskSwitchContext  tasks.o
    0x08003522   0x08003522   0x00000002   PAD
    0x08003524   0x08003524   0x0000003a   Code   RO         1040    .text.xPortStartScheduler  port.o
    0x0800355e   0x0800355e   0x00000002   PAD
    0x08003560   0x08003560   0x0000002e   Code   RO         1054    .text.xPortSysTickHandler  port.o
    0x0800358e   0x0800358e   0x00000002   PAD
    0x08003590   0x08003590   0x00000016   Code   RO         1105    .text.xQueueCreateMutex  queue.o
    0x080035a6   0x080035a6   0x00000002   PAD
    0x080035a8   0x080035a8   0x00000022   Code   RO         1109    .text.xQueueCreateMutexStatic  queue.o
    0x080035ca   0x080035ca   0x00000002   PAD
    0x080035cc   0x080035cc   0x00000032   Code   RO         1103    .text.xQueueGenericCreate  queue.o
    0x080035fe   0x080035fe   0x00000002   PAD
    0x08003600   0x08003600   0x0000001c   Code   RO         1099    .text.xQueueGenericCreateStatic  queue.o
    0x0800361c   0x0800361c   0x0000006a   Code   RO         1097    .text.xQueueGenericReset  queue.o
    0x08003686   0x08003686   0x00000002   PAD
    0x08003688   0x08003688   0x00000136   Code   RO         1117    .text.xQueueGenericSend  queue.o
    0x080037be   0x080037be   0x00000002   PAD
    0x080037c0   0x080037c0   0x00000070   Code   RO         1133    .text.xQueueGenericSendFromISR  queue.o
    0x08003830   0x08003830   0x00000128   Code   RO         1137    .text.xQueueReceive  queue.o
    0x08003958   0x08003958   0x00000162   Code   RO         1121    .text.xQueueSemaphoreTake  queue.o
    0x08003aba   0x08003aba   0x00000002   PAD
    0x08003abc   0x08003abc   0x0000005c   Code   RO         1257    .text.xTaskCheckForTimeOut  tasks.o
    0x08003b18   0x08003b18   0x00000066   Code   RO         1185    .text.xTaskCreate   tasks.o
    0x08003b7e   0x08003b7e   0x00000002   PAD
    0x08003b80   0x08003b80   0x0000003e   Code   RO         1179    .text.xTaskCreateStatic  tasks.o
    0x08003bbe   0x08003bbe   0x00000002   PAD
    0x08003bc0   0x08003bc0   0x00000026   Code   RO         1273    .text.xTaskGetSchedulerState  tasks.o
    0x08003be6   0x08003be6   0x00000002   PAD
    0x08003be8   0x08003be8   0x0000000c   Code   RO         1229    .text.xTaskGetTickCount  tasks.o
    0x08003bf4   0x08003bf4   0x0000013a   Code   RO         1227    .text.xTaskIncrementTick  tasks.o
    0x08003d2e   0x08003d2e   0x00000002   PAD
    0x08003d30   0x08003d30   0x0000005c   Code   RO         1277    .text.xTaskPriorityDisinherit  tasks.o
    0x08003d8c   0x08003d8c   0x00000092   Code   RO         1275    .text.xTaskPriorityInherit  tasks.o
    0x08003e1e   0x08003e1e   0x00000002   PAD
    0x08003e20   0x08003e20   0x0000007a   Code   RO         1249    .text.xTaskRemoveFromEventList  tasks.o
    0x08003e9a   0x08003e9a   0x00000002   PAD
    0x08003e9c   0x08003e9c   0x000000fc   Code   RO         1199    .text.xTaskResumeAll  tasks.o
    0x08003f98   0x08003f98   0x00000068   Code   RO         1332    .text.xTimerCreateTimerTask  timers.o
    0x08004000   0x08004000   0x00000056   Code   RO         1344    .text.xTimerGenericCommand  timers.o
    0x08004056   0x08004056   0x00000002   PAD
    0x08004058   0x08004058   0x00000018   Data   RO          101    .rodata.CanCbks     helper.o
    0x08004070   0x08004070   0x00000008   Data   RO          102    .rodata.CanConfigSet  helper.o
    0x08004078   0x08004078   0x00000018   Data   RO          100    .rodata.CanCtrlConfig  helper.o
    0x08004090   0x08004090   0x00000011   Data   RO           98    .rodata.CanFilterMaskRef  helper.o
    0x080040a1   0x080040a1   0x00000003   PAD
    0x080040a4   0x080040a4   0x00000030   Data   RO           99    .rodata.CanHoh      helper.o
    0x080040d4   0x080040d4   0x0000000c   Data   RO          111    .rodata.CanIfCanRxPduHrhRef  helper.o
    0x080040e0   0x080040e0   0x00000004   Data   RO          113    .rodata.CanIfCanTxPduHthRef  helper.o
    0x080040e4   0x080040e4   0x00000008   Data   RO          104    .rodata.CanIfCtlrConfig  helper.o
    0x080040ec   0x080040ec   0x00000010   Data   RO          105    .rodata.CanIfDispatchConfig  helper.o
    0x080040fc   0x080040fc   0x00000018   Data   RO          110    .rodata.CanIfHohConfig  helper.o
    0x08004114   0x08004114   0x0000000c   Data   RO          106    .rodata.CanIfHrhConfig1  helper.o
    0x08004120   0x08004120   0x0000000c   Data   RO          107    .rodata.CanIfHrhConfig2  helper.o
    0x0800412c   0x0800412c   0x00000004   Data   RO          108    .rodata.CanIfHthConfig1  helper.o
    0x08004130   0x08004130   0x00000004   Data   RO          109    .rodata.CanIfHthConfig2  helper.o
    0x08004134   0x08004134   0x00000020   Data   RO          112    .rodata.CanIfRxPduConfig  helper.o
    0x08004154   0x08004154   0x00000018   Data   RO          114    .rodata.CanIfTxPduConfig  helper.o
    0x0800416c   0x0800416c   0x0000000c   Data   RO          120    .rodata.CanTpConfig  helper.o
    0x08004178   0x08004178   0x00000004   Data   RO          117    .rodata.CanTpGeneral  helper.o
    0x0800417c   0x0800417c   0x00000038   Data   RO          118    .rodata.CanTpNSduConfigList  helper.o
    0x080041b4   0x080041b4   0x00000018   Data   RO          119    .rodata.CanTpRxIdList  helper.o
    0x080041cc   0x080041cc   0x0000000c   Data   RO          121    .rodata.CommConfig  helper.o
    0x080041d8   0x080041d8   0x0000001c   Data   RO          115    .rodata.InitConfig  helper.o
    0x080041f4   0x080041f4   0x00000020   Data   RO         1574    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08004214, Size: 0x00000084, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08004214   0x00000004   Data   RW          103    .data.CanConfig     helper.o
    0x20000004   0x08004218   0x00000018   Data   RW          116    .data.CanifConfig   helper.o
    0x2000001c   0x08004230   0x00000004   Data   RW          967    .data.SystemCoreClock  system_stm32f10x.o
    0x20000020   0x08004234   0x00000020   Data   RW           53    .data.rxbuf         can_app.o
    0x20000040   0x08004254   0x00000020   Data   RW           48    .data.txbuf         can_app.o
    0x20000060   0x08004274   0x00000008   Data   RW           44    .data.txbuf1        can_app.o
    0x20000068   0x0800427c   0x00000008   Data   RW           45    .data.txbuf2        can_app.o
    0x20000070   0x08004284   0x00000008   Data   RW           46    .data.txbuf3        can_app.o
    0x20000078   0x0800428c   0x00000008   Data   RW           47    .data.txbuf4        can_app.o
    0x20000080   0x08004294   0x00000004   Data   RW         1056    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000088, Load base: 0x08004298, Size: 0x00003378, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000088        -       0x00000060   Zero   RW         1441    .bss                c_w.l(libspace.o)
    0x200000e8        -       0x00000004   Zero   RW          214    .bss.CanIf_ConfigPtr  canif.o
    0x200000ec        -       0x00000003   Zero   RW          215    .bss.CanIf_Global   canif.o
    0x200000ef   0x08004298   0x00000001   PAD
    0x200000f0        -       0x000000b4   Zero   RW          268    .bss.CanTpRunTimeData  cantp.o
    0x200001a4        -       0x00000048   Zero   RW          165    .bss.CanUnit        can.o
    0x200001ec        -       0x00000004   Zero   RW           13    .bss.GPIO_InitStructure  main.o
    0x200001f0        -       0x00000038   Zero   RW          164    .bss.can_global     can.o
    0x20000228        -       0x00000004   Zero   RW           59    .bss.cantxrx.txidx  can_app.o
    0x2000022c        -       0x00000190   Zero   RW          315    .bss.clib_mutex_cb  clib_arm.o
    0x200003bc        -       0x00000014   Zero   RW          314    .bss.clib_mutex_id  clib_arm.o
    0x200003d0        -       0x00000001   Zero   RW          316    .bss.os_kernel_is_active.os_kernel_active  clib_arm.o
    0x200003d1        -       0x00000050   Zero   RW         1394    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x20000421   0x08004298   0x00000003   PAD
    0x20000424        -       0x00000050   Zero   RW         1393    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000474        -       0x00000004   Zero   RW         1390    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000478        -       0x00000004   Zero   RW         1303    .bss.pxCurrentTCB   tasks.o
    0x2000047c        -       0x00000004   Zero   RW         1388    .bss.pxCurrentTimerList  timers.o
    0x20000480        -       0x00000004   Zero   RW         1310    .bss.pxDelayedTaskList  tasks.o
    0x20000484        -       0x00000004   Zero   RW         1081    .bss.pxEnd          heap_4.o
    0x20000488        -       0x00000004   Zero   RW         1311    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000048c        -       0x00000004   Zero   RW         1389    .bss.pxOverflowTimerList  timers.o
    0x20000490        -       0x00000460   Zero   RW         1313    .bss.pxReadyTasksLists  tasks.o
    0x200008f0        -       0x00000008   Zero   RW           49    .bss.rxbuf1         can_app.o
    0x200008f8        -       0x00000008   Zero   RW           50    .bss.rxbuf2         can_app.o
    0x20000900        -       0x00000008   Zero   RW           51    .bss.rxbuf3         can_app.o
    0x20000908        -       0x00000008   Zero   RW           52    .bss.rxbuf4         can_app.o
    0x20000910        -       0x00000004   Zero   RW           55    .bss.rxbufptr       can_app.o
    0x20000914        -       0x00000004   Zero   RW           54    .bss.rxlen          can_app.o
    0x20000918        -       0x00000004   Zero   RW           57    .bss.txbufptr       can_app.o
    0x2000091c        -       0x00000004   Zero   RW           56    .bss.txlen          can_app.o
    0x20000920        -       0x00002000   Zero   RW         1088    .bss.ucHeap         heap_4.o
    0x20002920        -       0x00000004   Zero   RW         1307    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002924        -       0x00000004   Zero   RW         1306    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002928        -       0x00000004   Zero   RW         1315    .bss.uxSchedulerSuspended  tasks.o
    0x2000292c        -       0x00000004   Zero   RW         1304    .bss.uxTaskNumber   tasks.o
    0x20002930        -       0x00000004   Zero   RW         1314    .bss.uxTopReadyPriority  tasks.o
    0x20002934        -       0x00000200   Zero   RW          490    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002b34        -       0x0000005c   Zero   RW          489    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002b90        -       0x00000140   Zero   RW          492    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002cd0        -       0x0000005c   Zero   RW          491    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002d2c        -       0x00000014   Zero   RW         1391    .bss.xActiveTimerList1  timers.o
    0x20002d40        -       0x00000014   Zero   RW         1392    .bss.xActiveTimerList2  timers.o
    0x20002d54        -       0x00000001   Zero   RW         1082    .bss.xBlockAllocatedBit  heap_4.o
    0x20002d55   0x08004298   0x00000003   PAD
    0x20002d58        -       0x00000014   Zero   RW         1322    .bss.xDelayedTaskList1  tasks.o
    0x20002d6c        -       0x00000014   Zero   RW         1323    .bss.xDelayedTaskList2  tasks.o
    0x20002d80        -       0x00000004   Zero   RW         1083    .bss.xFreeBytesRemaining  heap_4.o
    0x20002d84        -       0x00000004   Zero   RW         1317    .bss.xIdleTaskHandle  tasks.o
    0x20002d88        -       0x00000004   Zero   RW         1085    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002d8c        -       0x00000004   Zero   RW         1318    .bss.xNextTaskUnblockTime  tasks.o
    0x20002d90        -       0x00000004   Zero   RW         1321    .bss.xNumOfOverflows  tasks.o
    0x20002d94        -       0x00000004   Zero   RW         1086    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002d98        -       0x00000004   Zero   RW         1087    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002d9c        -       0x00000004   Zero   RW         1320    .bss.xPendedTicks   tasks.o
    0x20002da0        -       0x00000014   Zero   RW         1316    .bss.xPendingReadyList  tasks.o
    0x20002db4        -       0x00000004   Zero   RW         1308    .bss.xSchedulerRunning  tasks.o
    0x20002db8        -       0x00000008   Zero   RW         1084    .bss.xStart         heap_4.o
    0x20002dc0        -       0x00000014   Zero   RW         1312    .bss.xSuspendedTaskList  tasks.o
    0x20002dd4        -       0x00000014   Zero   RW         1305    .bss.xTasksWaitingTermination  tasks.o
    0x20002de8        -       0x00000004   Zero   RW         1309    .bss.xTickCount     tasks.o
    0x20002dec        -       0x00000004   Zero   RW         1386    .bss.xTimerQueue    timers.o
    0x20002df0        -       0x00000004   Zero   RW         1387    .bss.xTimerTaskHandle  timers.o
    0x20002df4        -       0x00000004   Zero   RW         1319    .bss.xYieldPending  tasks.o
    0x20002df8        -       0x00000004   Zero   RW           58    .bss.yQueue         can_app.o
    0x20002dfc   0x08004298   0x00000004   PAD
    0x20002e00        -       0x00000200   Zero   RW          950    HEAP                startup_stm32f10x_md.o
    0x20003000        -       0x00000400   Zero   RW          949    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1190          0          0          0        128      12896   can.o
       786          8          0         96         56      13989   can_app.o
      1044         22          0          0          7      13222   canif.o
      3464         12          0          0        180      17465   cantp.o
       230          0          0          0        421       3520   clib_arm.o
        78          0          0          0       1016      52813   cmsis_os2.o
       568          0          0          0       8221       4549   heap_4.o
        80          0        409         28          0      12360   helper.o
       154          0          0          0          0       2331   list.o
        84          0          0          0          4       4531   main.o
        94          0          0          0          0       3556   misc.o
       416         12          0          4          0       2835   port.o
      1804          0          0          0          0      18070   queue.o
        64         26        236          0       1536        868   startup_stm32f10x_md.o
      1126         32          0          0          0      10575   stm32f10x_can.o
       292          0          0          0          0       5932   stm32f10x_gpio.o
        72          0          0          0          0       7748   stm32f10x_rcc.o
       284          0          0          4          0       2854   system_stm32f10x.o
      2560          8          0          0       1280      27260   tasks.o
      1036         18          0          0        220      13130   timers.o

    ----------------------------------------------------------------------
     15616        138        680        132      13080     230504   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       190          0          3          0         11          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       620         16          0          0         96        880   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       612         16          0          0         96        880   c_w.l

    ----------------------------------------------------------------------
       620         16          0          0         96        880   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16236        154        680        132      13176     230780   Grand Totals
     16236        154        680        132      13176     230780   ELF Image Totals
     16236        154        680        132          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16916 (  16.52kB)
    Total RW  Size (RW Data + ZI Data)             13308 (  13.00kB)
    Total ROM Size (Code + RO Data + RW Data)      17048 (  16.65kB)

==============================================================================

